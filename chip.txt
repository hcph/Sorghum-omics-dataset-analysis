##用q 1e-5 call peak,得到两个重复的peak,H3K4me2 call broad peak,peak间隔<500bp的合并
##绘制组蛋白修饰metaplot,全基因组
conda activate py36
module load deepTools/3.5.0
#k4me2
cd /public/home/chaohe/sorghum/chip/align/RPKM
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *K4me2_rep0_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o K4me2.mat.gz"
plotProfile --dpi 720 -m K4me2.mat.gz -out K4me2.profile.pdf --plotFileFormat pdf --perGroup
#K9ac
cd /public/home/chaohe/sorghum/chip/align/RPKM
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *K9ac_rep0_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o K9ac.mat.gz"
plotProfile --dpi 720 -m K9ac.mat.gz -out K9ac.profile.pdf --plotFileFormat pdf --perGroup
#K27ac
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *K27ac_rep0_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o K27ac.mat.gz"
plotProfile --dpi 720 -m K27ac.mat.gz -out K27ac.profile.pdf --plotFileFormat pdf --perGroup
#K27me3
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *K27me3_rep0_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o K27me3.mat.gz"
plotProfile --dpi 720 -m K27me3.mat.gz -out K27me3.profile.pdf --plotFileFormat pdf --perGroup
#K36me3
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *K36me3_rep0_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o K36me3.mat.gz"
plotProfile --dpi 720 -m K36me3.mat.gz -out K36me3.profile.pdf --plotFileFormat pdf --perGroup
#K43
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *K43_rep0_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o K43.mat.gz"
plotProfile --dpi 720 -m K43.mat.gz -out K43.profile.pdf --plotFileFormat pdf --perGroup
##KH2AZ
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *KH2AZ_rep0_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o KH2AZ.mat.gz"
plotProfile --dpi 720 -m KH2AZ.mat.gz -out KH2AZ.profile.pdf --plotFileFormat pdf --perGroup
#看所有重复的情况，标准化和未标准化
cd /public/home/chaohe/sorghum/chip/align/RPKM
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *KH2AZ_rep*_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o KH2AZ_rep.mat.gz"
cd /public/home/chaohe/sorghum/chip/align/narrow
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *KH2AZ*.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o KH2AZ_unnormalization.mat.gz"
plotProfile --dpi 720 -m KH2AZ_rep.mat.gz -out KH2AZ_rep.profile.pdf --plotFileFormat pdf --perGroup
plotProfile --dpi 720 -m KH2AZ_unnormalization.mat.gz -out KH2AZ_unnormalization.profile.pdf --plotFileFormat pdf --perGroup
##H2A2绘制peak区域内的metaplot
cd /public/home/chaohe/sorghum/chip/macs2/broad_rep-spp-0.00001
cat CLKH2AZ_rep1.peaks.bed CLKH2AZ_rep2.peaks.bed CRKH2AZ_rep1.peaks.bed CRKH2AZ_rep2.peaks.bed PLKH2AZ_rep1.peaks.bed PLKH2AZ_rep2.peaks.bed PRKH2AZ_rep1.peaks.bed PRKH2AZ_rep2.peaks.bed > total_KH2AZ.peaks.bed
sort -k1,1 -k2n,2  total_KH2AZ.peaks.bed | bedtools merge -i - -c 4 -o collapse >KH2AZ.bed
#bed转bw,图片很奇怪，换成根据bed提取bam再转bw
cd /public/home/chaohe/sorghum/chip/macs2/broad_rep-spp-0.00001
cat CLKH2AZ_rep1.peaks.bed CLKH2AZ_rep2.peaks.bed | sort -k1,1 -k2n,2 | bedtools merge -i - -c 4 -o collapse > CLKH2AZ.peaks.bed
bedtools genomecov -i CLKH2AZ.peaks.bed -g Sorghum_bicolor.genome_table.txt -bg > CLKH2AZ.bedgraph
bedGraphToBigWig CLKH2AZ.bedgraph Sorghum_bicolor.genome_table.txt CLKH2AZ_bed.bw
cat CRKH2AZ_rep1.peaks.bed CRKH2AZ_rep2.peaks.bed | sort -k1,1 -k2n,2 | bedtools merge -i - -c 4 -o collapse > CRKH2AZ.peaks.bed
bedtools genomecov -i CRKH2AZ.peaks.bed -g genome_table.txt -bg > CRKH2AZ.bedgraph
bedGraphToBigWig CRKH2AZ.bedgraph genome_table.txt CRKH2AZ_bed.bw
cat PLKH2AZ_rep1.peaks.bed PLKH2AZ_rep2.peaks.bed | sort -k1,1 -k2n,2 | bedtools merge -i - -c 4 -o collapse > PLKH2AZ.peaks.bed
bedtools genomecov -i PLKH2AZ.peaks.bed -g genome_table.txt -bg > PLKH2AZ.bedgraph
bedGraphToBigWig PLKH2AZ.bedgraph genome_table.txt PLKH2AZ_bed.bw
cat PRKH2AZ_rep1.peaks.bed PRKH2AZ_rep2.peaks.bed | sort -k1,1 -k2n,2 | bedtools merge -i - -c 4 -o collapse > PRKH2AZ.peaks.bed
bedtools genomecov -i PRKH2AZ.peaks.bed -g genome_table.txt -bg > PRKH2AZ.bedgraph
bedGraphToBigWig PRKH2AZ.bedgraph genome_table.txt PRKH2AZ_bed.bw
bedtools genomecov -i CLKH2AZ_rep2.peaks.bed -g /public/home/chaohe/sorghum/RNA-seq/db/Sorghum_bicolor.genome_table.txt -bg > CLKH2AZ_rep2.bedgraph
bedGraphToBigWig CLKH2AZ_rep2.bedgraph mm10.chrom.sizes> CLKH2AZ_rep2_bed.bw
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *bed.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --binSize 50 --skipZeros -o KH2AZR2.mat.gz"
plotProfile --dpi 720 -m KH2AZR2.mat.gz -out KH2AZR2.profile.pdf --plotFileFormat pdf --perGroup
#根据bed提取bam再转bw
cd /public/home/chaohe/sorghum/chip/align
bedtools  intersect  -a CLKH2AZ_rep0.bam -b ../macs2/broad_rep-spp-0.00001/CLKH2AZ.peaks.bed > CLKH2AZ_reads.bam
bedtools  intersect  -a CRKH2AZ_rep0.bam -b ../macs2/broad_rep-spp-0.00001/CRKH2AZ.peaks.bed > CRKH2AZ_reads.bam
bedtools  intersect  -a PLKH2AZ_rep0.bam -b ../macs2/broad_rep-spp-0.00001/PLKH2AZ.peaks.bed > PLKH2AZ_reads.bam
bedtools  intersect  -a PRKH2AZ_rep0.bam -b ../macs2/broad_rep-spp-0.00001/PRKH2AZ.peaks.bed > PRKH2AZ_reads.bam
samtools index -c CLKH2AZ_reads.bam
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "samtools index -c CRKH2AZ_reads.bam"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "samtools index -c PLKH2AZ_reads.bam"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "samtools index -c PRKH2AZ_reads.bam"
##标准化
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam CLKH2AZ_reads.bam -o CLKH2AZ_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam CRKH2AZ_reads.bam -o CRKH2AZ_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam PLKH2AZ_reads.bam -o PLKH2AZ_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam PRKH2AZ_reads.bam -o PRKH2AZ_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
#绘制趋势图
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S CLKH2AZ_rpkm.bw CRKH2AZ_rpkm.bw PLKH2AZ_rpkm.bw PRKH2AZ_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o KH2AZR1.mat.gz"
plotProfile --dpi 720 -m KH2AZR1.mat.gz -out KH2AZR1.profile.pdf --plotFileFormat pdf --perGroup
##不标准化
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam CLKH2AZ_reads.bam -o CLKH2AZ_.bw --binSize 20 --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam CRKH2AZ_reads.bam -o CRKH2AZ_.bw --binSize 20 --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam PLKH2AZ_reads.bam -o PLKH2AZ_.bw --binSize 20 --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam PRKH2AZ_reads.bam -o PRKH2AZ_.bw --binSize 20 --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
#绘制趋势图
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S CLKH2AZ_.bw CRKH2AZ_.bw PLKH2AZ_.bw PRKH2AZ_.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o KH2AZR2.mat.gz"
plotProfile --dpi 720 -m KH2AZR2.mat.gz -out KH2AZR2.profile.pdf --plotFileFormat pdf --perGroup
##gene上的富集热图，用上面的方法做
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *K4me2_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 0 -a 0 -m 1500 --skipZeros -o K4me2.mat.gz"
plotHeatmap -m K4me2.mat.gz -out K4me2_heatmap.pdf
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *K9ac_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 0 -a 0 -m 1500 --skipZeros -o K9acR2.mat.gz"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *K27ac_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 0 -a 0 -m 1500 --skipZeros -o K27acR2.mat.gz"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *K27me3_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 0 -a 0 -m 1500 --skipZeros -o K27me3R2.mat.gz"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *K36me3_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 0 -a 0 -m 1500 --skipZeros -o K36me3R2.mat.gz"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *K43_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 0 -a 0 -m 1500 --skipZeros -o K43R2.mat.gz"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -S *KH2AZ_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 0 -a 0 -m 1500 --skipZeros -o KH2AZR2.mat.gz"
plotHeatmap -m K9acR2.mat.gz -out K9ac_heatmap.pdf
plotHeatmap -m K27acR2.mat.gz -out K27ac_heatmap.pdf
plotHeatmap -m K27me3R2.mat.gz -out K27me3_heatmap.pdf
plotHeatmap -m K36me3R2.mat.gz -out K36me3_heatmap.pdf
plotHeatmap -m K43R2.mat.gz -out K43_heatmap.pdf
plotHeatmap -m KH2AZR2.mat.gz -out KH2AZ_heatmap.pdf
###误删补充
bedtools  intersect  -a CLK36me3_rep0.bam -b ../macs2/broad_rep-spp-0.00001/CLK36me3.peaks.bed > CLK36me3_reads.bam
bedtools  intersect  -a CRK36me3_rep0.bam -b ../macs2/broad_rep-spp-0.00001/CRK36me3.peaks.bed > CRK36me3_reads.bam
bedtools  intersect  -a CRK9ac_rep0.bam -b ../macs2/narrow-spp-0.00001/CRK9ac.peaks.bed > CRK9ac_reads.bam
bedtools  intersect  -a CRKH2AZ_rep0.bam -b ../macs2/broad_rep-spp-0.00001/CRKH2AZ.peaks.bed > CRKH2AZ_reads.bam
bedtools  intersect  -a PLK9ac_rep0.bam -b ../macs2/narrow-spp-0.00001/PLK9ac.peaks.bed > PLK9ac_reads.bam
bedtools  intersect  -a PRK36me3_rep0.bam -b ../macs2/broad_rep-spp-0.00001/PRK36me3.peaks.bed > PRK36me3_reads.bam
bedtools  intersect  -a PRK9ac_rep0.bam -b ../macs2/narrow-spp-0.00001/PRK9ac.peaks.bed > PRK9ac_reads.bam


PLK9ac_reads.bam
PRK36me3_reads.bam
PRK9ac_reads.bam



###绘制相关性热图，用落在基因上的reads标准化后的bw
cd /public/home/chaohe/sorghum/chip/align
multiBigwigSummary  bins --bwfiles *rpkm*bw --binSize 100 --numberOfProcessors 10 --outRawCounts chip.txt -o chip.npz -p 8
plotCorrelation -in chip.npz  \
--corMethod pearson --skipZeros \
--plotTitle "Pearson Correlation of Read Counts" \
--whatToPlot heatmap --colorMap RdYlBu --plotNumbers --removeOutliers \
--plotFileFormat pdf \
-o heatmap_PearsonCorr_readCounts.pdf   \
--outFileCorMatrix PearsonCorr_readCounts.tab

computeMatrix scale-regions -p 10 -S CLK43_rpkm.bw CRK43_rpkm.bw PLK43_rpkm.bw PRK43_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o K43R1.mat.gz
plotProfile --dpi 720 -m K43R1.mat.gz -out K43R1.profile.pdf --plotFileFormat pdf --perGroup
plotHeatmap -m K43R1.mat.gz -out K43R1_heatmap.pdf
computeMatrix scale-regions -p 10 -S CLK27me3_rpkm.bw CRK27me3_rpkm.bw PLK27me3_rpkm.bw PRK27me3_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o K27me3R1.mat.gz
plotProfile --dpi 720 -m K27me3R1.mat.gz -out K27me3R1.profile.pdf --plotFileFormat pdf --perGroup
plotHeatmap -m K27me3R1.mat.gz -out K27me3R1_heatmap.pdf
computeMatrix scale-regions -p 10 -S CLK27ac_rpkm.bw CRK27ac_rpkm.bw PLK27ac_rpkm.bw PRK27ac_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o K27acR1.mat.gz
plotProfile --dpi 720 -m K27acR1.mat.gz -out K27acR1.profile.pdf --plotFileFormat pdf --perGroup
plotHeatmap -m K27acR1.mat.gz -out K27acR1_heatmap.pdf


##高粱根和叶中干旱处理前后基因TSS±1000bp的核小体排列metaplot，不对，需要鉴定核小体位置再作图
cd /public/home/chaohe/sorghum/mnase/align
computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed  -S *MN_rep0_rpkm.bw  --skipZeros -o MN_TSS.gz  --outFileSortedRegions regions1_MN_genes.bed
##重新分析，先鉴定核小体位置再作图
#产生input bed文件,final.bam改成rep0.bam
cd /public/home/chaohe/sorghum/mnase/align
cut -f 2,3 ../meta/macs2.meta | while read i j; do
bedtools bamtobed -i ../align/"$j".final.bam > "$j".final.bed
done
#利用iNPS鉴定核小体位置
conda activate py3
mkdir ../nucleosome 
cut -f 3 ../meta/macs2.meta | while read j; do
python3 /public/home/chaohe/sorghum/mnase/iNPS_V1.2.2.py -i "$j".final.bed -o ../nucleosome/"$j" --s_p p
done
#合并核小体的bed文件，这里储存的是核小体的位置
cd /public/home/chaohe/sorghum/mnase/nucleosome
cat CRMN1_*.like_bed >CRMN1.like.bed
###将基因分类
#Metaplots of nucleosome profiles in genes with differential expression levels in the wild type. All expressed genes (FPKM>0.1,
#n=19,538) were divided into four quartiles by their expression level; quartile 1 contains the lowest 25% of genes and quartile 4
#contains the highest 25% of genes.
##在R中实现，具体见D:/高粱/分析代码/sorgum_DEGs.R
#提取落在核小体区域的reads，转bw后绘图
cd /public/home/chaohe/sorghum/mnase/nucleosome
sed '/chromosome/d;/Start_inflection/d' ../nucleosome/CRMN1.like.bed  > ../nucleosome/CRMN1.likeR1.bed
bedtools  intersect  -a ../align/CLMN1.final.bam -b ../nucleosome/CRMN1.likeR1.bed > CRMN1_nucleosome.bam
##绘制TSS上下游1kb趋势图
cd /public/home/chaohe/sorghum/mnase/nucleosome
#samtools index -c CRMN1_nucleosome.bam
#bamCoverage --bam CRMN1_nucleosome.bam -o CRMN1_nucleosome.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads
#bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R CL_Q1.txt CL_Q2.txt CL_Q3.txt CL_Q4.txt  -S ../align/CLMN*.bw  --skipZeros -o CRMN1_nucleosome.gz  --outFileSortedRegions regions1_MN_genes.bed"
#plotProfile --dpi 720 -m CRMN1_nucleosome.gz -out CRMN1_nucleosome.pdf --plotFileFormat pdf
#computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R CL_Q1.txt CL_Q2.txt CL_Q3.txt CL_Q4.txt  -S CRMN.bw  --skipZeros -o CRMN1_nucleosome.gz  --outFileSortedRegions regions1_MN_genes.bed
#不看单个重复的了，看rep0的，下面有
conda install -c bioconda ucsc-wigtobigwig
#CR1
cat CRMN1_*.like_wig | awk -F'[\t]' '{print $1"\t"$6}' | sed '/track/d;/Coordinate/d' >CRMN1.likeR1.wig
perl -p -i -e 's/chromosome/chrom/g' CRMN1.likeR1.wig
wigToBigWig CRMN1.likeR1.wig /public/home/chaohe/db/chromInfo.bed CRMN1.like.bw
#CR2
cat CRMN1_*.like_wig | awk -F'[\t]' '{print $1"\t"$6}' | sed '/track/d;/Coordinate/d' >CRMN1.likeR1.wig
perl -p -i -e 's/chromosome/chrom/g' CRMN1.likeR1.wig
wigToBigWig -clip CRMN1.likeR1.wig /public/home/chaohe/db/chromInfo.bed CRMN1.like.bw
#CL1
cat CLMN1_*.like_wig | awk -F'[\t]' '{print $1"\t"$6}' | sed '/track/d;/Coordinate/d' >CLMN1.likeR1.wig
perl -p -i -e 's/chromosome/chrom/g' CLMN1.likeR1.wig
wigToBigWig -clip CLMN1.likeR1.wig /public/home/chaohe/db/chromInfo.bed CLMN1.like.bw
#CL2
cat CLMN2_*.like_wig  | awk -F'[\t]' '{print $1"\t"$6}' | sed '/track/d;/Coordinate/d' >CLMN2.likeR1.wig
perl -p -i -e 's/chromosome/chrom/g' CLMN2.likeR1.wig
wigToBigWig  -clip CLMN2.likeR1.wig /public/home/chaohe/db/chromInfo.bed CLMN2.like.bw
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R CL_Q1.txt CL_Q2.txt CL_Q3.txt CL_Q4.txt --binSize 5  -S CLMN1.like.bw CLMN2.like.bw --skipZeros --averageTypeBins mean -o CLMN_nucleosome.gz  --outFileSortedRegions regions1_MN_genes.bed"
plotProfile --dpi 720 -m CLMN_nucleosome.gz -out CLMN_nucleosome.pdf --plotFileFormat pdf
####CL CR PL PR所有基因的核小体的分布
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R  /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed --binSize 20  -S CRMN1.like.bw CRMN2.like.bw CLMN1.like.bw CLMN2.like.bw PLMN1.like.bw PLMN2.like.bw PRMN1.like.bw PRMN2.like.bw --skipZeros --averageTypeBins mean -o MN_nucleosome_rep.gz  --outFileSortedRegions MN_genes.bed"
plotProfile --dpi 720 -m MN_nucleosome_rRp.gz -out MN_nucleosome_rep.pdf --plotFileFormat pdf
######rep0
#PR1
cat PRMN1_*.like_wig | awk -F'[\t]' '{print $1"\t"$6}' | sed '/track/d;/Coordinate/d' >PRMN1.likeR1.wig
perl -p -i -e 's/chromosome/chrom/g' PRMN1.likeR1.wig
wigToBigWig PRMN1.likeR1.wig /public/home/chaohe/db/chromInfo.bed PRMN1.like.bw
#PR2
cat PRMN2_*.like_wig  | awk -F'[\t]' '{print $1"\t"$6}' | sed '/track/d;/Coordinate/d' >PRMN2.likeR1.wig
perl -p -i -e 's/chromosome/chrom/g' PRMN2.likeR1.wig
wigToBigWig PRMN2.likeR1.wig /public/home/chaohe/db/chromInfo.bed PRMN2.like.bw
#PL1
cat PLMN1_*.like_wig | awk -F'[\t]' '{print $1"\t"$6}' | sed '/track/d;/Coordinate/d' >PLMN1.likeR1.wig
perl -p -i -e 's/chromosome/chrom/g' PLMN1.likeR1.wig
wigToBigWig -clip PLMN1.likeR1.wig /public/home/chaohe/db/chromInfo.bed PLMN1.like.bw
#PL2
cat PLMN2_*.like_wig  | awk -F'[\t]' '{print $1"\t"$6}' | sed '/track/d;/Coordinate/d' >PLMN2.likeR1.wig
perl -p -i -e 's/chromosome/chrom/g' PLMN2.likeR1.wig
wigToBigWig  -clip PLMN2.likeR1.wig /public/home/chaohe/db/chromInfo.bed PLMN2.like.bw
####CL CR PL PR所有基因的核小体的分布
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R  /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed --binSize 20  -S CRMN1.like.bw CRMN2.like.bw CLMN1.like.bw CLMN2.like.bw PLMN1.like.bw PLMN2.like.bw PRMN1.like.bw PRMN2.like.bw --skipZeros  -o MN_nucleosome_rep.gz  --outFileSortedRegions MN_genes.bed"
plotProfile --dpi 720 -m MN_nucleosome_rep.gz -out MN_nucleosome_rep.pdf --plotFileFormat pdf  --perGroup

##这种做法不对，提取bed中的reads再用bamCoverage标准化为bw后可视化，这样画出来的图没有趋势
#cd /public/home/chaohe/sorghum/mnase/nucleosome
#cat CRMN_*.like_bed | sed '/chromosome/d;/Start_inflection/d'  > CRMN.likeR1.bed
#bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bedtools  intersect  -a ../align/CRMN_rep0.bam -b ../nucleosome/CRMN.likeR1.bed | samtools sort - -o CRMN_nucleosome.bam"
#samtools index -c CRMN_nucleosome.bam
#bsub  -J bam2bw -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam CRMN_nucleosome.bam -o CRMN_nucleosome.bw --binSize 5 --normalizeUsing RPKM --effectiveGenomeSize 708735318 --extendReads"
#bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R CR_Q1.txt CR_Q2.txt CR_Q3.txt CR_Q4.txt  -S CRMN_nucleosome.bw  --skipZeros -o test.gz  --outFileSortedRegions regions1_MN_genes.bed"
#plotProfile --dpi 720 -m test.gz -out test.pdf --plotFileFormat pdf
####最终用的方法，rep0鉴定的核小体的位置产生的wig文件转bigwig，再可视化
#CRMN
cd /public/home/chaohe/sorghum/mnase/nucleosome
cat CRMN_reo0*.like_wig | awk -F'[\t]' '{print $1"\t"$6}' | sed '/track/d;/Coordinate/d' >CRMN.like.wig
perl -p -i -e 's/chromosome/chrom/g' CRMN.like.wig
wigToBigWig  -clip CRMN.like.wig /public/home/chaohe/db/chromInfo.bed CRMN.like.bw
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R CR_Q1.txt CR_Q2.txt CR_Q3.txt CR_Q4.txt --binSize 20  -S CRMN.like.bw --skipZeros --averageTypeBins mean -o CRMN_nucleosome.gz  --outFileSortedRegions CRMN_MN_genes.bed"
plotProfile --dpi 720 -m CRMN_nucleosome.gz -out CRMN_nucleosome.pdf --plotFileFormat pdf
#CLMN
cd /public/home/chaohe/sorghum/mnase/nucleosome
cat CLMN_reo0*.like_wig | awk -F'[\t]' '{print $1"\t"$6}' | sed '/track/d;/Coordinate/d' >CLMN.like.wig
perl -p -i -e 's/chromosome/chrom/g' CLMN.like.wig
wigToBigWig  -clip CLMN.like.wig /public/home/chaohe/db/chromInfo.bed CLMN.like.bw
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R CR_Q1.txt CR_Q2.txt CR_Q3.txt CR_Q4.txt --binSize 20  -S CLMN.like.bw --skipZeros --averageTypeBins mean -o CLMN_nucleosome.gz  --outFileSortedRegions CLMN_MN_genes.bed"
plotProfile --dpi 720 -m CLMN_nucleosome.gz -out CLMN_nucleosome.pdf --plotFileFormat pdf
#PRMN
cd /public/home/chaohe/sorghum/mnase/nucleosome
cat PRMN_reo0*.like_wig | awk -F'[\t]' '{print $1"\t"$6}' | sed '/track/d;/Coordinate/d' >PRMN.like.wig
perl -p -i -e 's/chromosome/chrom/g' PRMN.like.wig
wigToBigWig  -clip PRMN.like.wig /public/home/chaohe/db/chromInfo.bed PRMN.like.bw
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R CR_Q1.txt CR_Q2.txt CR_Q3.txt CR_Q4.txt --binSize 20  -S PRMN.like.bw --skipZeros --averageTypeBins mean -o PRMN_nucleosome.gz  --outFileSortedRegions PRMN_MN_genes.bed"
plotProfile --dpi 720 -m PRMN_nucleosome.gz -out PRMN_nucleosome.pdf --plotFileFormat pdf
#PLMN
cd /public/home/chaohe/sorghum/mnase/nucleosome
cat PLMN_reo0*.like_wig | awk -F'[\t]' '{print $1"\t"$6}' | sed '/track/d;/Coordinate/d' >PLMN.like.wig
perl -p -i -e 's/chromosome/chrom/g' PLMN.like.wig
wigToBigWig  -clip PLMN.like.wig /public/home/chaohe/db/chromInfo.bed PLMN.like.bw
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R CR_Q1.txt CR_Q2.txt CR_Q3.txt CR_Q4.txt --binSize 20  -S PLMN.like.bw --skipZeros --averageTypeBins mean -o PLMN_nucleosome.gz  --outFileSortedRegions PLMN_MN_genes.bed"
plotProfile --dpi 720 -m PLMN_nucleosome.gz -out PLMN_nucleosome.pdf --plotFileFormat pdf
####CL CR PL PR所有基因的核小体的分布
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R  /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed --binSize 20  -S CRMN.like.bw CLMN.like.bw PLMN.like.bw PRMN.like.bw --skipZeros --averageTypeBins mean -o MN_nucleosome.gz  --outFileSortedRegions MN_genes.bed"

##############根和叶差异表达基因的核小体排列metaplot
computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R up_gene.bed --binSize 20  -S CRMN.like.bw CLMN.like.bw --skipZeros --averageTypeBins mean -o CL_CR_up_nucleosome.gz  --outFileSortedRegions CL_CR_up_genes.bed
plotProfile --dpi 720 -m CL_CR_up_nucleosome.gz -out CL_CR_up_nucleosome.pdf --plotFileFormat pdf
computeMatrix reference-point --referencePoint TSS -b 1000 -a 1000 -R down_gene.bed --binSize 20  -S CRMN.like.bw CLMN.like.bw --skipZeros --averageTypeBins mean -o CL_CR_down_nucleosome.gz  --outFileSortedRegions CL_CR_down_genes.bed
plotProfile --dpi 720 -m CL_CR_down_nucleosome.gz -out CL_CR_down_nucleosome.pdf --plotFileFormat pdf




#######分析染色质状态
###利用chromHMM对组蛋白修饰进行分类
#准备基因组序列
mkdir /public/home/chaohe/ChromHMM/ANCHORFILES/wheat
cd /public/home/chaohe/ChromHMM/ANCHORFILES/wheat
awk '{if ($6 == "+") print $1"\t"$2"\t"$6; else print $1"\t"$3"\t"$6}' /public/home/chaohe/db/geneR1.bed | gzip >RefSeqTSS.wheat.txt.gz
awk '{if ($6 == "+") print $1"\t"$3"\t"$6; else print $1"\t"$2"\t"$6}' /public/home/chaohe/db/geneR1.bed | gzip >RefSeqTES.wheat.txt.gz
cd /public/home/chaohe/ChromHMM/CHROMSIZES
cp /public/home/chaohe/db/genome_table.txt wheat.txt
mkdir /public/home/chaohe/ChromHMM/COORDS/wheat
cd /public/home/chaohe/ChromHMM/COORDS/wheat
zcat ../../ANCHORFILES/wheat/RefSeqTSS.wheat.txt.gz | awk '{print $1"\t"$2"\t"$2+1}' | gzip >RefSeqTSS.wheat.bed.gz
zcat ../../ANCHORFILES/wheat/RefSeqTES.wheat.txt.gz | awk '{print $1"\t"$2"\t"$2+1}' | gzip >RefSeqTES.wheat.bed.gz
awk '{print $1"\t"$2"\t"$3}' /public/home/chaohe/db/geneR1.bed | gzip > RefSeqGene.ce6.bed.gz
grep "exon" /public/home/chaohe/db/AK58_HC_gene_20181008.gtf | awk '{print $1"\t"$4"\t"$5}' | gzip > RefSeqExon.ce6.bed.gz
cd ChromHMM
#数据准备
cd /public/home/chaohe/ChromHMM
mkdir data data/bam
cd data/bam
cp /public/home/guoai/bisiteng_analysis/chip/k4_k9/qc/P8.final.bed .
cp /public/home/guoai/bisiteng_analysis/chip/k4_k9/qc/P1.final.bed .
cp /public/home/guoai/bisiteng_analysis/chip/k4_k9/qc/P10.final.bed .
cp /public/home/guoai/bisiteng_analysis/chip/k4_k9/qc/P3.final.bed .
cp /public/home/guoai/bisiteng_analysis/chip/k27/qc/P12.final.bed .
cp /public/home/guoai/bisiteng_analysis/chip/k27/qc/P5.final.bed .
bedtools bamtobed -i /public/home/guoai/bisiteng_analysis/chip/k4_k9/align/P14.final.bam > P14.final.bed
bedtools bamtobed -i /public/home/guoai/bisiteng_analysis/chip/k4_k9/align/P7.final.bam > P7.final.bed
cat data/cellmarkfiletablebams_Input.txt#EXCEL中生成
#创建Binned and Binarized Tracks
java -mx40000M -jar ChromHMM.jar BinarizeBed -f 2 -t wheat -b 200 CHROMSIZES/wheat.txt data/bam data/cellmarkﬁletable.txt Input_FC2
#训练模型并segment基因组
bsub -q interactive -XF -Is bash
java -mx4000M -jar ChromHMM.jar LearnModel -b 200 Input_FC2 OUTPUTSAMPLE 8 wheat
#OverlapEnrichment
OverlapEnrichment 
outfileprefix
#得到结果文件可视化
state <- read.csv("emissions_8.csv")
#row.names(state) <- paste0("cluster",state[,1])
row.names(state) <- state[,1]
state <- state[,-1]
head(state)
#绘制热图
library(circlize )
p3 <- Heatmap(as.matrix(state), 
        #top_annotation = ha, 
        cluster_columns = FALSE,
        cluster_rows = FALSE,
        #top_annotation_height = unit(4, "mm"),
        show_row_names = TRUE, show_column_names = TRUE,
        col = colorRamp2(c(0,1), c("white","#353892")))
##分析每个state中基因的表达水平
##stage1
#利用bedtools找到每个区域的基因
cd /public/home/chaohe/ChromHMM/OUTPUTSAMPLE
bedtools closest -D ref -t all -mdb all -a stage1_8_segments.bed -b /public/home/chaohe/db/geneR1.bed | awk '{if($11 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$8}' > stage1.txt
bedtools closest -D ref -t all -mdb all -a stage2_8_segments.bed -b /public/home/chaohe/db/geneR1.bed | awk '{if($11 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$8}'  > stage2.txt
#读入数据
setwd("D:/AG_幼穗/raw_data_bed/chromHMM")
s1 <- read.table("stage1.txt")
s2 <- read.table("stage2.txt")
head(s1)
head(s2)
#添加表达量
tpm <- read.csv("D:/AG_幼穗/RNA-seq/gene_id_express_x1_x2_mean.csv")
tpm <- tpm[,c(1,8,9)]
tpm$V5 <- tpm[,1]
head(tpm)
s1_tpm <- merge(s1,tpm,by="V5",all.x=F)
s2_tpm <- merge(s2,tpm,by="V5",all.x=F)
###保存每个cluster的基因集及其表达量
write.csv(s1_tpm,"s1_tpm.csv")
write.csv(s2_tpm,"s2_tpm.csv")
#准备作图数据
s1_tpm <- s1_tpm[,c(5,7)]
s1_tpm$X1_mean <- log2(s1_tpm$X1_mean+1)
s2_tpm <- s2_tpm[,c(5,8)]
s2_tpm$X2_mean <- log2(s2_tpm$X2_mean+1)
s1_tpm$V4 <- factor(s1_tpm$V4 , levels=c("E1","E2","E3","E4",
                                         "E5","E6","E7","E8"), ordered=TRUE)
s2_tpm$V4 <- factor(s2_tpm$V4 , levels=c("E1","E2","E3","E4",
                                         "E5","E6","E7","E8"), ordered=TRUE)
#绘制柱形图可视化
p1 <- ggboxplot(s1_tpm, x = "V4", y ="X1_mean", fill = "V4",
          #add = "mean_sd", error.plot = "crossbar") +
          #add = "boxplot") +
          outlier.shape = NA,
          add = "none") +
  scale_fill_manual(values=c("#1f77b4", "#aec7e8", "#ff7f0e", "#ffbb78", "#2ca02c", "#98df8a","#d62728","#ff9896","#6A3D9A","#CAB2D6")) +
  ggtitle("S1") + 
  theme(plot.title = element_text(hjust = 0.5,size=18),
        axis.text.x = element_text(angle = 90, hjust = 1)) +
  xlab(NULL) + ylab("log2 (TPM+1)")

p2 <- ggboxplot(s2_tpm, x = "V4", y ="X2_mean", fill = "V4",
                #add = "mean_sd", error.plot = "crossbar") +
                #add = "boxplot") +
                outlier.shape = NA,
                add = "none") +
  scale_fill_manual(values=c("#1f77b4", "#aec7e8", "#ff7f0e", "#ffbb78", "#2ca02c", "#98df8a","#d62728","#ff9896","#6A3D9A","#CAB2D6")) +
  ggtitle("S1") + 
  theme(plot.title = element_text(hjust = 0.5,size=18),
        axis.text.x = element_text(angle = 90, hjust = 1)) +
  xlab(NULL) + ylab("log2 (TPM+1)")
grid.arrange(p1,p2,
             nrow=1,ncol=2)     %>%  ggsave("histone_cluter.pdf",.,width=100,height=100, units="mm")


#######图3，以H2A、K9....的聚类分别为模板作为聚类的模板画其它聚类
####聚类分析：先用deeptools computeMatrix生成聚类文件，加上--outFileSortedRegions参数，再用plotheatmap可视化，参数使用--kmeans 3 --clusterUsingSamples 1 --colorMap  viridis
###CL
#对照，不聚类
plotHeatmap -m CL_TSS.gz      -out  nocluster_TSS.pdf   \
   --colorMap viridis  --zMin -3 --zMax 3 \
   --whatToShow 'heatmap and colorbar' \
   --plotFileFormat pdf      --dpi 300 \
   --outFileName nocluster.tab
#对照，不以哪个为参照聚成3类
plotHeatmap -m CL_TSS.gz      -out  noreference_TSSR1.pdf   \
   --colorMap viridis  --zMin -3 --zMax 3  \
   --whatToShow 'heatmap and colorbar'  --kmeans 3 \
   --plotFileFormat pdf   --dpi 300 \
   --outFileName noreference.tab
#对照，--clusterUsingSamples 1 2 3 4 5 6 7
plotHeatmap -m CL_TSS.gz \
     -out using7_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 1 2 3 4 5 6 7 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileName using7.tab
#对照，--sortUsingSamples 1
plotHeatmap -m CL_TSS.gz \
     -out clusterusing1_TSSR1_sortUsingSamples2.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 1 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --sortUsingSamples 2
plotHeatmap -m CL_TSS.gz \
     -out clusterusing2_TSSR1_sortUsingSamples2.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 2 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --sortUsingSamples 2
	 
plotHeatmap -m CL_TSS.gz \
     -out clusterusing1_TSSR1_sortUsingSamples1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 1 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --sortUsingSamples 1
#以H2A作为聚类的模板画其它聚类CRheatmap.lsf
computeMatrix reference-point --referencePoint TSS  -b 500 -a 3000 -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed  \
       -S CLKH2AZ_rpkm.bw CLK9ac_rpkm.bw CLK27ac_rpkm.bw CLK43_rpkm.bw CLK4me2_rpkm.bw CLK36me3_rpkm.bw CLK27me3_rpkm.bw \
       --skipZeros  -o CL_TSS.gz --outFileSortedRegions CL_TSS_genes.bed
plotHeatmap -m CL_TSS.gz \
     -out CL_CLKH2AZ_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 1 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_TSS.bed \
	 --outFileNameMatrix MyMatrix_CL_TSS.gz
#以CLK9ac作为聚类的模板画其它聚类
plotHeatmap -m CL_TSS.gz \
     -out CL_CLK9ac_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 2 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_CLK9ac_TSS.bed \
	 --outFileNameMatrix MyMatrix_CLK9ac_CL_TSS.gz
#以CLK27ac作为聚类的模板画其它聚类
plotHeatmap -m CL_TSS.gz \
     -out CL_CLK27ac_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 3 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_CLK27ac_TSS.bed \
	 --outFileNameMatrix MyMatrix_CLK27ac_CL_TSS.gz
#以CLK43作为聚类的模板画其它聚类
plotHeatmap -m CL_TSS.gz \
     -out CL_CLK43_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 4 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_CLK43_TSS.bed \
	 --outFileNameMatrix MyMatrix_CLK43_CL_TSS.gz
#以CLK4me2作为聚类的模板画其它聚类
plotHeatmap -m CL_TSS.gz \
     -out CL_CLK4me2_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 5 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_CLK4me2_TSS.bed \
	 --outFileNameMatrix MyMatrix_CLK4me2_CL_TSS.gz
#以CLK36me3作为聚类的模板画其它聚类
plotHeatmap -m CL_TSS.gz \
     -out CL_CLK36me3_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 6 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_CLK36me3_TSS.bed \
	 --outFileNameMatrix MyMatrix_CLK36me3_CL_TSS.gz
#以CLK27me3作为聚类的模板画其它聚类
plotHeatmap -m CL_TSS.gz \
     -out CL_CLK36me3_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 7 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_CLK36me3_TSS.bed \
	 --outFileNameMatrix MyMatrix_CLK36me3_CL_TSS.gzplotHeatmap -m CL_TSS.gz \
     -out CL_CLK9ac_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 2 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_CLK9ac_TSS.bed \
	 --outFileNameMatrix MyMatrix_CLK9ac_CL_TSS.gz
#以CLK27ac作为聚类的模板画其它聚类
plotHeatmap -m CL_TSS.gz \
     -out CL_CLK27ac_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 3 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_CLK27ac_TSS.bed \
	 --outFileNameMatrix MyMatrix_CLK27ac_CL_TSS.gz
#以CLK43作为聚类的模板画其它聚类
plotHeatmap -m CL_TSS.gz \
     -out CL_CLK43_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 4 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_CLK43_TSS.bed \
	 --outFileNameMatrix MyMatrix_CLK43_CL_TSS.gz
#以CLK4me2作为聚类的模板画其它聚类
plotHeatmap -m CL_TSS.gz \
     -out CL_CLK4me2_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 5 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_CLK4me2_TSS.bed \
	 --outFileNameMatrix MyMatrix_CLK4me2_CL_TSS.gz
#以CLK36me3作为聚类的模板画其它聚类
plotHeatmap -m CL_TSS.gz \
     -out CL_CLK36me3_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 6 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_CLK36me3_TSS.bed \
	 --outFileNameMatrix MyMatrix_CLK36me3_CL_TSS.gz
#以CLK27me3作为聚类的模板画其它聚类
plotHeatmap -m CL_TSS.gz \
     -out CL_CLK27me3_TSSR1.pdf \
     --colorMap viridis \
	 --zMin -3 --zMax 3 \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 7 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_CL_CLK27me3_TSS.bed \
	 --outFileNameMatrix MyMatrix_CLK27me3_CL_TSS.gz
###CR，见/public/home/chaohe/sorghum/chip/align/CRheatmap.lsf

##########拟南芥和水稻数据H3K36me3、H3K27me3和H2A.Z的重叠分析
####拟南芥
cd /public/home/chaohe/sorghum/other_species
bsub -J ara -n 20 -o ara.out -e ara.err  "computeMatrix reference-point --referencePoint TSS  -b 3000 -a 3000 -R /public/home/zhruan/ATAC-aradopisis/final/gene.bed  \
       -S GSM3674617_ChIP_Arabidopsis_7days_leaf_H3K27me3.bw GSM3674618_ChIP_Arabidopsis_7days_leaf_H3K36me3.bw GSM3674622_ChIP_Arabidopsis_7days_leaf_H2A.Z.bw \
       --skipZeros  -o ara_TSS.gz --outFileSortedRegions ara_TSS.bed"
computeMatrix reference-point --referencePoint TSS  -b 500 -a 3000 -R ara_gene.bed  \
       -S SRX3152337_H3K27me3.final.rpkm.bw SRX5735627_H3K36me3.final.rpkm.bw SRX3152348_H2AZ.final.rpkm.bw \
       --skipZeros  -o ara_TSS.gz --outFileSortedRegions ara_TSS.bed	   
plotHeatmap -m ara_TSS.gz \
     -out ara_H3K27me3_TSS50.pdf \
     --colorMap viridis \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 1 \
     --kmeans 3 \
	 --boxAroundHeatmaps no \
	 --zMin -1000 -1000 -1000 --zMax 1000 1000 1000 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --samplesLabel H3K27me3 H3K36me3 H2A.Z \
	 --outFileSortedRegions Heatmap1sortedRegions_ara_H3K27me3_TSS.bed \
	 --outFileNameMatrix MyMatrix_ara_H3K27me3_TSS.gz
plotHeatmap -m ara_TSS.gz \
     -out ara_H3K36me3_TSS.pdf \
     --colorMap viridis \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 2 \
     --kmeans 3 \
	 --boxAroundHeatmaps no \
	 --zMin -1000 -1000 -1000 --zMax 1000 1000 1000 \
	 --samplesLabel H3K27me3 H3K36me3 H2A.Z \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_ara_H3K36me3_TSS.bed \
	 --outFileNameMatrix MyMatrix_ara_H3K36me3_TSS.gz
plotHeatmap -m ara_TSS.gz \
     -out ara_H2AZ_TSS.pdf \
     --colorMap viridis \
	 --boxAroundHeatmaps no \
	 --zMin -1000 -1000 -1000 --zMax 1000 1000 1000 \
	 --samplesLabel H3K27me3 H3K36me3 H2A.Z \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 3 \
     --kmeans 3 \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_ara_H2AZ_TSS.bed \
	 --outFileNameMatrix MyMatrix_ara_H2AZ_TSS.gz
#看3种修饰的趋势
plotProfile --dpi 720 -m ara_TSS.gz -out ara_TSS.profile.pdf --plotFileFormat pdf --perGroup

####水稻
cd /public/home/chaohe/sorghum/other_species
#bsub -J rice -o rice.out -e rice.err  "computeMatrix reference-point --referencePoint TSS  -b 500 -a 3000 -R gene.bed  \
#       -S GSM3674681_ChIP_Rice_7days_leaf_H3K27me3.bw GSM3674682_ChIP_Rice_7days_leaf_H3K36me3.bw GSM3674686_ChIP_Rice_7days_leaf_H2A.Z.bw \
#       --skipZeros  -o rice_TSS.gz --outFileSortedRegions rice_TSS.bed"
module load deepTools/3.5.0
bsub -J rice -o rice.out -e rice.err  "computeMatrix reference-point --referencePoint TSS  -b 500 -a 3000 -R gene.bed  \
       -S SRX7426661.final.rpkm.bw SRX3599179_H3K36me3.final.rpkm.bw SRX6046233_H2AZ.final.rpkm.bw \
       --skipZeros  -o rice_TSS.gz --outFileSortedRegions rice_TSS.bed"
plotHeatmap -m rice_TSS.gz \
     -out rice_H3K27me3_TSS.pdf \
     --colorMap viridis \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 1 \
     --kmeans 3 \
	 --zMin -500 -500 -500 --zMax 500 500 500 \
	 --boxAroundHeatmaps no \
	 --samplesLabel H3K27me3 H3K36me3 H2A.Z \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_rice_H3K27me3_TSS.bed \
	 --outFileNameMatrix MyMatrix_rice_H3K27me3_TSS.gz
plotHeatmap -m rice_TSS.gz \
     -out rice_H3K36me3_TSS.pdf \
     --colorMap viridis \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 2 \
     --kmeans 3 \
	 --zMin -500 -500 -500 --zMax 500 500 500 \
	 --boxAroundHeatmaps no \
	 --samplesLabel H3K27me3 H3K36me3 H2A.Z \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_rice_H3K36me3_TSS.bed \
	 --outFileNameMatrix MyMatrix_rice_H3K36me3_TSS.gz
plotHeatmap -m rice_TSS.gz \
     -out rice_H2AZ_TSS.pdf \
     --colorMap viridis \
	 --whatToShow 'heatmap and colorbar' \
	 --clusterUsingSamples 3 \
     --kmeans 3 \
	 --zMin -500 -500 -500 --zMax 500 500 500 \
	 --boxAroundHeatmaps no \
	 --samplesLabel H3K27me3 H3K36me3 H2A.Z \
	 --plotFileFormat pdf \
     --dpi 300 \
	 --outFileSortedRegions Heatmap1sortedRegions_rice_H2AZ_TSS.bed \
	 --outFileNameMatrix MyMatrix_rice_H2AZ_TSS.gz
#看H2AZ的趋势,没问题
computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500 -R gene.bed --binSize 20  -S GSM3674686_ChIP_Rice_7days_leaf_H2A.Z.bw --skipZeros --averageTypeBins mean -o rice_haz2R1.gz  --outFileSortedRegions rice_haz2.bed
plotProfile --dpi 720 -m rice_haz2R1.gz -out rice_2azR1.pdf --plotFileFormat pdf
plotProfile --dpi 720 -m rice_TSS.gz -out rice_3.pdf --plotFileFormat pdf
######挑选区段可视化，D:\高粱\ChIP\其它物种片段大小\其它chip\区段.docx
cd /public/home/chaohe/sorghum/other_species
conda activate py36
module load pyGenomeTracks/3.5
#ara
make_tracks_file --trackFiles SRX3152337_H3K27me3.final.rpkm.bw SRX5735627_H3K36me3.final.rpkm.bw ara_gene.bed -o araR1-1.ini
make_tracks_file --trackFiles SRX3152348_H2AZ.final.rpkm.bw SRX5735627_H3K36me3.final.rpkm.bw ara_gene.bed -o araR1-2.ini
pyGenomeTracks --tracks araR1-1.ini --region  Chr1:21,928,179-22,023,256  -o  ara-1.pdf
pyGenomeTracks --tracks araR1-2.ini --region  Chr1:7,558,554-7,610,905 -o  ara-2.pdf
#rice
make_tracks_file --trackFiles SRX7426661.final.rpkm.bw SRX3599179_H3K36me3.final.rpkm.bw rice_gene.bed -o riceR1-1.ini
make_tracks_file --trackFiles SRX6046233_H2AZ.final.rpkm.bw SRX3599179_H3K36me3.final.rpkm.bw rice_gene.bed -o riceR1-2.ini
pyGenomeTracks --tracks riceR1-1.ini --region  7:1,867,040-2,612,519  -o  rice-1.pdf
pyGenomeTracks --tracks riceR1-2.ini --region  3:28,115,929-28,193,711 -o  rice-2.pdf

拟南芥H3K27me3+H3K36me3， 1:21,928,179-22,023,256
拟南芥H2A.Z+H3K36me3， 1:7,558,554-7,610,905
水稻H3K27me3+H3K36me3，Chr7:1,867,040-2,612,519
水稻H2A.Z+H3K36me3，Chr3:28,115,929-28,193,711

################原图2a,根和叶中差异表达基因上的组蛋白标签富集metaplot（上调基因和下调基因分开做）
####差异表达基因上下游1.5kb
#上调基因
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK9ac_rpkm.bw CLK9ac_rpkm.bw --skipZeros -o CRK9ac_CLK9ac_up.gz  --outFileSortedRegions CRK9ac_CLK9ac_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK27ac_rpkm.bw CLK27ac_rpkm.bw --skipZeros -o CRK27ac_CLK27ac_up.gz  --outFileSortedRegions CRK27ac_CLK27ac_up_gens.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK43_rpkm.bw CLK43_rpkm.bw --skipZeros -o CRK43_CLK43_up.gz  --outFileSortedRegions CRK43_CLK43_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK4me2_rpkm.bw CLK4me2_rpkm.bw --skipZeros -o CRK4me2_CLK4me2_up.gz  --outFileSortedRegions CRK4me2_CLK4me2_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK27me3_rpkm.bw CLK27me3_rpkm.bw --skipZeros -o CRK27me3_CLK27me3_up.gz  --outFileSortedRegions CRK27me3_CLK27me3up__genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK36me3_rpkm.bw CLK36me3_rpkm.bw --skipZeros -o CRK36me3_CLK36me3_up.gz  --outFileSortedRegions CRK36me3_CLK36me3up__genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRKH2AZ_rpkm.bw CLKH2AZ_rpkm.bw --skipZeros -o CRKH2AZ_CLKH2AZ_up.gz  --outFileSortedRegions CRKH2AZ_CLKH2AZup__genes.bed"
#下调基因
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK9ac_rpkm.bw CLK9ac_rpkm.bw --skipZeros -o CRK9ac_CLK9ac_down.gz  --outFileSortedRegions CRK9ac_CLK9ac_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK27ac_rpkm.bw CLK27ac_rpkm.bw --skipZeros -o CRK27ac_CLK27ac_down.gz  --outFileSortedRegions CRK27ac_CLK27ac_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK43_rpkm.bw CLK43_rpkm.bw --skipZeros -o CRK43_CLK43_down.gz  --outFileSortedRegions CRK43_CLK43_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK4me2_rpkm.bw CLK4me2_rpkm.bw --skipZeros -o CRK4me2_CLK4me2_down.gz  --outFileSortedRegions CRK4me2_CLK4me2_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK27me3_rpkm.bw CLK27me3_rpkm.bw --skipZeros -o CRK27me3_CLK27me3_down.gz  --outFileSortedRegions CRK27me3_CLK27me3_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK36me3_rpkm.bw CLK36me3_rpkm.bw --skipZeros -o CRK36me3_CLK36me3_down.gz  --outFileSortedRegions CRK36me3_CLK36me3_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRKH2AZ_rpkm.bw CLKH2AZ_rpkm.bw --skipZeros -o CRKH2AZ_CLKH2AZ_down.gz  --outFileSortedRegions CRKH2AZ_CLKH2AZ_down_genes.bed"
####只看TSS和TES
#上调基因
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK9ac_rpkm.bw CLK9ac_rpkm.bw --skipZeros -o CRK9ac_CLK9ac_up.gz  --outFileSortedRegions CRK9ac_CLK9ac_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK27ac_rpkm.bw CLK27ac_rpkm.bw --skipZeros -o CRK27ac_CLK27ac_up.gz  --outFileSortedRegions CRK27ac_CLK27ac_up_gens.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK43_rpkm.bw CLK43_rpkm.bw --skipZeros -o CRK43_CLK43_up.gz  --outFileSortedRegions CRK43_CLK43_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK4me2_rpkm.bw CLK4me2_rpkm.bw --skipZeros -o CRK4me2_CLK4me2_up.gz  --outFileSortedRegions CRK4me2_CLK4me2_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK27me3_rpkm.bw CLK27me3_rpkm.bw --skipZeros -o CRK27me3_CLK27me3_up.gz  --outFileSortedRegions CRK27me3_CLK27me3up__genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK36me3_rpkm.bw CLK36me3_rpkm.bw --skipZeros -o CRK36me3_CLK36me3_up.gz  --outFileSortedRegions CRK36me3_CLK36me3up__genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRKH2AZ_rpkm.bw CLKH2AZ_rpkm.bw --skipZeros -o CRKH2AZ_CLKH2AZ_up.gz  --outFileSortedRegions CRKH2AZ_CLKH2AZup__genes.bed"
#下调基因
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK9ac_rpkm.bw CLK9ac_rpkm.bw --skipZeros -o CRK9ac_CLK9ac_down.gz  --outFileSortedRegions CRK9ac_CLK9ac_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK27ac_rpkm.bw CLK27ac_rpkm.bw --skipZeros -o CRK27ac_CLK27ac_down.gz  --outFileSortedRegions CRK27ac_CLK27ac_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK43_rpkm.bw CLK43_rpkm.bw --skipZeros -o CRK43_CLK43_down.gz  --outFileSortedRegions CRK43_CLK43_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK4me2_rpkm.bw CLK4me2_rpkm.bw --skipZeros -o CRK4me2_CLK4me2_down.gz  --outFileSortedRegions CRK4me2_CLK4me2_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK27me3_rpkm.bw CLK27me3_rpkm.bw --skipZeros -o CRK27me3_CLK27me3_down.gz  --outFileSortedRegions CRK27me3_CLK27me3_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK36me3_rpkm.bw CLK36me3_rpkm.bw --skipZeros -o CRK36me3_CLK36me3_down.gz  --outFileSortedRegions CRK36me3_CLK36me3_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 0 -a 0 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRKH2AZ_rpkm.bw CLKH2AZ_rpkm.bw --skipZeros -o CRKH2AZ_CLKH2AZ_down.gz  --outFileSortedRegions CRKH2AZ_CLKH2AZ_down_genes.bed"

#看K4me3用原始的标准化的reads是什么情况
cd /public/home/chaohe/sorghum/chip/align
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R ../crvscl_up_gebe.bed --binSize 20  -S CRK43_rep1_rpkm.bw CRK43_rep2_rpkm.bw CLK43_rep1_rpkm.bw CLK43_rep2_rpkm.bw --skipZeros -o CRK43_CLK43_rep_up.gz  --outFileSortedRegions CRK43_CLK43_rep_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R ../crvscl_down_gene.bed --binSize 20  -S CRK43_rep1_rpkm.bw CRK43_rep2_rpkm.bw CLK43_rep1_rpkm.bw CLK43_rep2_rpkm.bw --skipZeros -o CRK43_CLK43_rep_down.gz  --outFileSortedRegions CRK43_CLK43_rep_down_genes.bed"

bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R ../crvscl_up_gebe.bed --binSize 20  -S CRK43_rep0_rpkm.bw CLK43_rep0_rpkm.bw --skipZeros -o CRK43_CLK43_rep0_up.gz  --outFileSortedRegions CRK43_CLK43_rep0_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R ../crvscl_down_gene.bed --binSize 20  -S CRK43_rep0_rpkm.bw CLK43_rep0_rpkm.bw --skipZeros -o CRK43_CLK43_rep0_down.gz  --outFileSortedRegions CRK43_CLK43_rep0_down_genes.bed"

plotProfile --dpi 720 -m CRK43_CLK43_rep_up.gz -out CRK43_CLK43_rep_up.pdf --plotFileFormat pdf --perGroup --outFileNameData CRK43_CLK43_rep_up.tab
plotProfile --dpi 720 -m CRK43_CLK43_rep_down.gz -out CRK43_CLK43_rep_down.pdf --plotFileFormat pdf --perGroup --outFileNameData CRK43_CLK43_rep_down.tab
plotProfile --dpi 720 -m CRK43_CLK43_rep0_up.gz -out CRK43_CLK43_rep0_up.pdf --plotFileFormat pdf --perGroup --outFileNameData CRK43_CLK43_rep0_up.tab
plotProfile --dpi 720 -m CRK43_CLK43_rep0_down.gz -out CRK43_CLK43_rep0_down.pdf --plotFileFormat pdf --perGroup --outFileNameData CRK43_CLK43_rep0_down.tab

plotProfile --dpi 720 -m CRK9ac_CLK9ac_up.gz -out CRK9ac_CLK9ac_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK9ac_CLK9ac_up.tab
plotProfile --dpi 720 -m CRK27ac_CLK27ac_up.gz -out CRK27ac_CLK27ac_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27ac_CLK27ac_up.tab
plotProfile --dpi 720 -m CRK43_CLK43_up.gz -out CRK43_CLK43_up.pdf --plotFileFormat pdf --perGroup  --outFileNameData CRK43_CLK43_up.tab
plotProfile --dpi 720 -m CRK4me2_CLK4me2_up.gz -out CRK4me2_CLK4me2_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK4me2_CLK4me2_up.tab
plotProfile --dpi 720 -m CRK27me3_CLK27me3_up.gz -out CRK27me3_CLK27me3_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27me3_CLK27me3_up.tab
plotProfile --dpi 720 -m CRK36me3_CLK36me3_up.gz -out CRK36me3_CLK36me3_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK36me3_CLK36me3_up.tab
plotProfile --dpi 720 -m CRKH2AZ_CLKH2AZ_up.gz -out CRKH2AZ_CLKH2AZ_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRKH2AZ_CLKH2AZ_up.tab

plotProfile --dpi 720 -m CRK9ac_CLK9ac_down.gz -out CRK9ac_CLK9ac_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK9ac_CLK9ac_down.tab
plotProfile --dpi 720 -m CRK27ac_CLK27ac_down.gz -out CRK27ac_CLK27ac_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27ac_CLK27ac_down.tab
plotProfile --dpi 720 -m CRK43_CLK43_down.gz -out CRK43_CLK43_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK43_CLK43_down.tab
plotProfile --dpi 720 -m CRK4me2_CLK4me2_down.gz -out CRK4me2_CLK4me2_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK4me2_CLK4me2_down.tab
plotProfile --dpi 720 -m CRK27me3_CLK27me3_down.gz -out CRK27me3_CLK27me3_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27me3_CLK27me3_down.tab
plotProfile --dpi 720 -m CRK36me3_CLK36me3_down.gz -out CRK36me3_CLK36me3_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK36me3_CLK36me3_down.tab
plotProfile --dpi 720 -m CRKH2AZ_CLKH2AZ_down.gz -out CRKH2AZ_CLKH2AZ_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRKH2AZ_CLKH2AZ_down.tab

#####提取落在基因区段得peak进行差异分析,diffbind,先不做
cd /public/home/chaohe/sorghum/chip/macs2/narrow-spp-0.00001
bedtools closest -D ref -t all -mdb all -a CLK27ac_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($17 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLK27ac_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a CLK27ac_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($17 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLK27ac_rep2.gene.bed
bedtools closest -D ref -t all -mdb all -a CLK43_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($17 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLK43_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a CLK43_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($17 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLK43_rep2.gene.bed
bedtools closest -D ref -t all -mdb all -a CLK9ac_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($17 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLK9ac_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a CLK9ac_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($17 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLK9ac_rep2.gene.bed
bedtools closest -D ref -t all -mdb all -a PLK27ac_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($17 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLK27ac_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a PLK27ac_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($17 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLK27ac_rep2.gene.bed
bedtools closest -D ref -t all -mdb all -a PLK43_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($17 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLK43_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a PLK43_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($17 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLK43_rep2.gene.bed
bedtools closest -D ref -t all -mdb all -a PLK9ac_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($17 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLK9ac_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a PLK9ac_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($17 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLK9ac_rep2.gene.bed
cd /public/home/chaohe/sorghum/chip/macs2/broad_rep-spp-0.00001
bedtools closest -D ref -t all -mdb all -a CLK4me2_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLK4me2_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a CLK4me2_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLK4me2_rep2.gene.bed
bedtools closest -D ref -t all -mdb all -a CLK27me3_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLK27me3_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a CLK27me3_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLK27me3_rep2.gene.bed
bedtools closest -D ref -t all -mdb all -a CLK36me3_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLK36me3_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a CLK36me3_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLK36me3_rep2.gene.bed
bedtools closest -D ref -t all -mdb all -a CLKH2AZ_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLKH2AZ_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a CLKH2AZ_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > CLKH2AZ_rep2.gene.bed
bedtools closest -D ref -t all -mdb all -a PLK4me2_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLK4me2_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a PLK4me2_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLK4me2_rep2.gene.bed
bedtools closest -D ref -t all -mdb all -a PLK27me3_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLK27me3_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a PLK27me3_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLK27me3_rep2.gene.bed
bedtools closest -D ref -t all -mdb all -a PLK36me3_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLK36me3_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a PLK36me3_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLK36me3_rep2.gene.bed
bedtools closest -D ref -t all -mdb all -a PLKH2AZ_rep1.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLKH2AZ_rep1.gene.bed
bedtools closest -D ref -t all -mdb all -a PLKH2AZ_rep2.peaks.bed -b /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed | awk '{if($16 ==0) print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9}' > PLKH2AZ_rep2.gene.bed
##diffbind
setwd("/public/home/chaohe/sorghum/chip/macs2/diffbind")
narrow <- read.csv('narrow_sample.csv')
narrowobj <- dba(sampleSheet=narrow)
broad <- read.csv('broad_sample.csv')
broadobj <- dba(sampleSheet=broad)
#绘制原始PCA图，可以作为附图,结果不行，不放，还是用deeptools做
pdf("original_PCA.pdf")
sample <- read.csv('sample_original.csv')
sampleobj <- dba(sampleSheet=sample)
dba.plotPCA(sampleobj,  attributes=DBA_FACTOR, label=DBA_ID)
dev.off()
#查看数据变异范围
Narrow5hmCValue <- dba.peakset(narrowobj, bRetrieve=TRUE) 
Broad5hmCValue <- dba.peakset(broadobj, bRetrieve=TRUE)
#标准化
narrowobj <- dba.contrast(narrowobj, categories=DBA_FACTOR, minMembers = 2)
broadobj <- dba.contrast(broadobj, categories=DBA_FACTOR, minMembers = 2)
narrow <- dba.analyze(narrowobj)
broad <- dba.analyze(broadobj)

####定量，调取落在基因上的reads，计算tpm值,合并重复
cd /public/home/chaohe/sorghum/chip/align
cut -f 1 ../meta/total1.txt | while read i; do
bedtools  intersect  -a "$i"_rep0.bam -b /public/home/chaohe/sorghum/RNA-seq/db/geneR1.bed > "$i"_gene.bam
samtools index -c "$i"_gene.bam
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50
done
cut -f 1 ../meta/total2.txt | while read i; do
bedtools  intersect  -a "$i"_rep0.bam -b /public/home/chaohe/sorghum/RNA-seq/db/geneR1.bed > "$i"_gene.bam
samtools index -c "$i"_gene.bam
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50
done
cut -f 1 ../meta/total3.txt | while read i; do
bedtools  intersect  -a "$i"_rep0.bam -b /public/home/chaohe/sorghum/RNA-seq/db/geneR1.bed > "$i"_gene.bam
samtools index -c "$i"_gene.bam
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50
done
cut -f 1 ../meta/total4.txt | while read i; do
bedtools  intersect  -a "$i"_rep0.bam -b /public/home/chaohe/sorghum/RNA-seq/db/geneR1.bed > "$i"_gene.bam
samtools index -c "$i"_gene.bam
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50
done
####单个重复都计算
cd /public/home/chaohe/sorghum/chip/align
cut -f 1 ../meta/total1.txt | while read i; do
bedtools  intersect  -a "$i".final.bam -b /public/home/chaohe/sorghum/RNA-seq/db/geneR1.bed > "$i"_gene.bam
samtools index -c "$i"_gene.bam
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50
done
cut -f 1 ../meta/total2.txt | while read i; do
bedtools  intersect  -a "$i".final.bam -b /public/home/chaohe/sorghum/RNA-seq/db/geneR1.bed > "$i"_gene.bam
samtools index -c "$i"_gene.bam
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50
done
cut -f 1 ../meta/total3.txt | while read i; do
bedtools  intersect  -a "$i".final.bam -b /public/home/chaohe/sorghum/RNA-seq/db/geneR1.bed > "$i"_gene.bam
samtools index -c "$i"_gene.bam
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50
done
cut -f 1 ../meta/total4.txt | while read i; do
bedtools  intersect  -a "$i".final.bam -b /public/home/chaohe/sorghum/RNA-seq/db/geneR1.bed > "$i"_gene.bam
samtools index -c "$i"_gene.bam
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50
done
cut -f 1 ../../meta/total6.txt | while read i; do
bedtools  intersect  -a ../"$i".final.bam -b /public/home/chaohe/sorghum/RNA-seq/db/geneR1.bed > "$i"_gene.bam
samtools index -c "$i"_gene.bam
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50
done



####定量分析
awk '{print $4"\t"$1"\t"$2"\t"$3"\t."}' /public/home/chaohe/sorghum/RNA-seq/db/geneR1.bed >gene.saf

GeneID	Chr	Start	End	Strand
497097	chr1	3204563	3207049	-
497097	chr1	3411783	3411982	-
497097	chr1	3660633	3661579	-
#featurecount计算count值
cut -f 1 ../meta/total1.txt | while read i; do
/public/home/chaohe/subread-2.0.2-Linux-x86_64/bin/featureCounts -p -P -B -C -T 4 \
 -a gene.saf \
 -F SAF \
 -o "$i"_counts_subread.txt \
 /disk2/users/che/ChIP_seq/chunhua/align/"$i"_gene.bam
done

cut -f 1 ../meta/total2.txt | while read i; do
/public/home/chaohe/subread-2.0.2-Linux-x86_64/bin/featureCounts -p -P -B -C -T 4 \
 -a gene.saf \
 -F SAF \
 -o "$i"_counts_subread.txt \
 /disk2/users/che/ChIP_seq/chunhua/align/"$i"_gene.bam
done

cut -f 1 ../meta/total3.txt | while read i; do
/public/home/chaohe/subread-2.0.2-Linux-x86_64/bin/featureCounts -p -P -B -C -T 4 \
 -a gene.saf \
 -F SAF \
 -o "$i"_counts_subread.txt \
 /disk2/users/che/ChIP_seq/chunhua/align/"$i"_gene.bam
done

cut -f 1 ../meta/total4.txt | while read i; do
/public/home/chaohe/subread-2.0.2-Linux-x86_64/bin/featureCounts -p -P -B -C -T 4 \
 -a gene.saf \
 -F SAF \
 -o "$i"_counts_subread.txt \
 /disk2/users/che/ChIP_seq/chunhua/align/"$i"_gene.bam
done



samtools view x.bam | awk '$3=="*" {print ">"$1"\n"$10}' >x_no_mapped_reads.txt



##合并重复的peak，bedtools merge peak
cat CLK43_rep1.peaks.bed CLK43_rep2.peaks.bed | sort -k1,1 -k2n,2 >CLK43.peaks.bed
bedtools merge -i CLK43.peaks.bed >CLK43_merged.peaks.bed

cat CLK4me2_rep1.peaks.bed CLK4me2_rep2.peaks.bed | sort -k1,1 -k2n,2 >CLK4me2.peaks.bed
bedtools merge -i CLK4me2.peaks.bed >CLK4me2_merged.peaks.bed


####homer合并peak并进行注释
进行注释，并绘制metaplot
mkdir /public/home/chaohe/sorghum/chip/analysis
cd /public/home/chaohe/sorghum/chip/analysis
cut -f 2 /public/home/chaohe/sorghum/chip/meta/broad.macs2.meta | while read i; do
annotatePeaks.pl /public/home/chaohe/sorghum/chip/macs2/narrow-spp-0.00001/"$i".peaks.bed  /public/home/chaohe/db/Sorghum.fa \
  -gtf /public/home/chaohe/sorghum/RNA-seq/db/Sorghum_bicolor.gtf > "$i".txt
done

#绘制meta_plot
makeMetaGeneProfile.pl /public/home/chaohe/sorghum/chip/macs2/narrow-spp-0.00001/CRK4me2_rep2.peaks.bed none \
 -p CRK4me2_rep2.txt -bin 10 -size 2000 -gbin 200 > CRK4me2_rep2_metaR1.txt
 
 
 
 
 
samtools view CLK9ac2.sort.bam | awk '$3=="*" {print ">"$1"\n"$10}' >CLK9ac2_no_mapped_reads.txt
 
 
####根处理前后差异表达基因上下游1.5kb
#上调基因
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R prvsvrl_up_gebe.bed --binSize 20  -S /public/home/chaohe/sorghum/chip/align/CRK9ac_rpkm.bw CLK9ac_rpkm.bw --skipZeros -o CRK9ac_CLK9ac_up.gz  --outFileSortedRegions CRK9ac_CLK9ac_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S /public/home/chaohe/sorghum/chip/alignCRK27ac_rpkm.bw CLK27ac_rpkm.bw --skipZeros -o CRK27ac_CLK27ac_up.gz  --outFileSortedRegions CRK27ac_CLK27ac_up_gens.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK43_rpkm.bw CLK43_rpkm.bw --skipZeros -o CRK43_CLK43_up.gz  --outFileSortedRegions CRK43_CLK43_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK4me2_rpkm.bw CLK4me2_rpkm.bw --skipZeros -o CRK4me2_CLK4me2_up.gz  --outFileSortedRegions CRK4me2_CLK4me2_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK27me3_rpkm.bw CLK27me3_rpkm.bw --skipZeros -o CRK27me3_CLK27me3_up.gz  --outFileSortedRegions CRK27me3_CLK27me3up__genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK36me3_rpkm.bw CLK36me3_rpkm.bw --skipZeros -o CRK36me3_CLK36me3_up.gz  --outFileSortedRegions CRK36me3_CLK36me3up__genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRKH2AZ_rpkm.bw CLKH2AZ_rpkm.bw --skipZeros -o CRKH2AZ_CLKH2AZ_up.gz  --outFileSortedRegions CRKH2AZ_CLKH2AZup__genes.bed"
#下调基因
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK9ac_rpkm.bw CLK9ac_rpkm.bw --skipZeros -o CRK9ac_CLK9ac_down.gz  --outFileSortedRegions CRK9ac_CLK9ac_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK27ac_rpkm.bw CLK27ac_rpkm.bw --skipZeros -o CRK27ac_CLK27ac_down.gz  --outFileSortedRegions CRK27ac_CLK27ac_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK43_rpkm.bw CLK43_rpkm.bw --skipZeros -o CRK43_CLK43_down.gz  --outFileSortedRegions CRK43_CLK43_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK4me2_rpkm.bw CLK4me2_rpkm.bw --skipZeros -o CRK4me2_CLK4me2_down.gz  --outFileSortedRegions CRK4me2_CLK4me2_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK27me3_rpkm.bw CLK27me3_rpkm.bw --skipZeros -o CRK27me3_CLK27me3_down.gz  --outFileSortedRegions CRK27me3_CLK27me3_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK36me3_rpkm.bw CLK36me3_rpkm.bw --skipZeros -o CRK36me3_CLK36me3_down.gz  --outFileSortedRegions CRK36me3_CLK36me3_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRKH2AZ_rpkm.bw CLKH2AZ_rpkm.bw --skipZeros -o CRKH2AZ_CLKH2AZ_down.gz  --outFileSortedRegions CRKH2AZ_CLKH2AZ_down_genes.bed"

plotProfile --dpi 720 -m CRK9ac_CLK9ac_up.gz -out CRK9ac_CLK9ac_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK9ac_CLK9ac_up.tab
plotProfile --dpi 720 -m CRK27ac_CLK27ac_up.gz -out CRK27ac_CLK27ac_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27ac_CLK27ac_up.tab
plotProfile --dpi 720 -m CRK43_CLK43_up.gz -out CRK43_CLK43_up.pdf --plotFileFormat pdf --perGroup  --outFileNameData CRK43_CLK43_up.tab
plotProfile --dpi 720 -m CRK4me2_CLK4me2_up.gz -out CRK4me2_CLK4me2_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK4me2_CLK4me2_up.tab
plotProfile --dpi 720 -m CRK27me3_CLK27me3_up.gz -out CRK27me3_CLK27me3_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27me3_CLK27me3_up.tab
plotProfile --dpi 720 -m CRK36me3_CLK36me3_up.gz -out CRK36me3_CLK36me3_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK36me3_CLK36me3_up.tab
plotProfile --dpi 720 -m CRKH2AZ_CLKH2AZ_up.gz -out CRKH2AZ_CLKH2AZ_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRKH2AZ_CLKH2AZ_up.tab

plotProfile --dpi 720 -m CRK9ac_CLK9ac_down.gz -out CRK9ac_CLK9ac_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK9ac_CLK9ac_down.tab
plotProfile --dpi 720 -m CRK27ac_CLK27ac_down.gz -out CRK27ac_CLK27ac_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27ac_CLK27ac_down.tab
plotProfile --dpi 720 -m CRK43_CLK43_down.gz -out CRK43_CLK43_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK43_CLK43_down.tab
plotProfile --dpi 720 -m CRK4me2_CLK4me2_down.gz -out CRK4me2_CLK4me2_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK4me2_CLK4me2_down.tab
plotProfile --dpi 720 -m CRK27me3_CLK27me3_down.gz -out CRK27me3_CLK27me3_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27me3_CLK27me3_down.tab
plotProfile --dpi 720 -m CRK36me3_CLK36me3_down.gz -out CRK36me3_CLK36me3_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK36me3_CLK36me3_down.tab
plotProfile --dpi 720 -m CRKH2AZ_CLKH2AZ_down.gz -out CRKH2AZ_CLKH2AZ_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRKH2AZ_CLKH2AZ_down.tab

####根和叶对照差异表达基因上下游1.5kb
#上调基因
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK9ac_rpkm.bw CLK9ac_rpkm.bw --skipZeros -o CRK9ac_CLK9ac_up.gz  --outFileSortedRegions CRK9ac_CLK9ac_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK27ac_rpkm.bw CLK27ac_rpkm.bw --skipZeros -o CRK27ac_CLK27ac_up.gz  --outFileSortedRegions CRK27ac_CLK27ac_up_gens.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK43_rpkm.bw CLK43_rpkm.bw --skipZeros -o CRK43_CLK43_up.gz  --outFileSortedRegions CRK43_CLK43_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK4me2_rpkm.bw CLK4me2_rpkm.bw --skipZeros -o CRK4me2_CLK4me2_up.gz  --outFileSortedRegions CRK4me2_CLK4me2_up_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK27me3_rpkm.bw CLK27me3_rpkm.bw --skipZeros -o CRK27me3_CLK27me3_up.gz  --outFileSortedRegions CRK27me3_CLK27me3up__genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRK36me3_rpkm.bw CLK36me3_rpkm.bw --skipZeros -o CRK36me3_CLK36me3_up.gz  --outFileSortedRegions CRK36me3_CLK36me3up__genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_up_gebe.bed --binSize 20  -S CRKH2AZ_rpkm.bw CLKH2AZ_rpkm.bw --skipZeros -o CRKH2AZ_CLKH2AZ_up.gz  --outFileSortedRegions CRKH2AZ_CLKH2AZup__genes.bed"
#下调基因
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK9ac_rpkm.bw CLK9ac_rpkm.bw --skipZeros -o CRK9ac_CLK9ac_down.gz  --outFileSortedRegions CRK9ac_CLK9ac_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK27ac_rpkm.bw CLK27ac_rpkm.bw --skipZeros -o CRK27ac_CLK27ac_down.gz  --outFileSortedRegions CRK27ac_CLK27ac_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK43_rpkm.bw CLK43_rpkm.bw --skipZeros -o CRK43_CLK43_down.gz  --outFileSortedRegions CRK43_CLK43_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK4me2_rpkm.bw CLK4me2_rpkm.bw --skipZeros -o CRK4me2_CLK4me2_down.gz  --outFileSortedRegions CRK4me2_CLK4me2_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK27me3_rpkm.bw CLK27me3_rpkm.bw --skipZeros -o CRK27me3_CLK27me3_down.gz  --outFileSortedRegions CRK27me3_CLK27me3_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRK36me3_rpkm.bw CLK36me3_rpkm.bw --skipZeros -o CRK36me3_CLK36me3_down.gz  --outFileSortedRegions CRK36me3_CLK36me3_down_genes.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R crvscl_down_gene.bed --binSize 20  -S CRKH2AZ_rpkm.bw CLKH2AZ_rpkm.bw --skipZeros -o CRKH2AZ_CLKH2AZ_down.gz  --outFileSortedRegions CRKH2AZ_CLKH2AZ_down_genes.bed"

plotProfile --dpi 720 -m CRK9ac_CLK9ac_up.gz -out CRK9ac_CLK9ac_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK9ac_CLK9ac_up.tab
plotProfile --dpi 720 -m CRK27ac_CLK27ac_up.gz -out CRK27ac_CLK27ac_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27ac_CLK27ac_up.tab
plotProfile --dpi 720 -m CRK43_CLK43_up.gz -out CRK43_CLK43_up.pdf --plotFileFormat pdf --perGroup  --outFileNameData CRK43_CLK43_up.tab
plotProfile --dpi 720 -m CRK4me2_CLK4me2_up.gz -out CRK4me2_CLK4me2_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK4me2_CLK4me2_up.tab
plotProfile --dpi 720 -m CRK27me3_CLK27me3_up.gz -out CRK27me3_CLK27me3_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27me3_CLK27me3_up.tab
plotProfile --dpi 720 -m CRK36me3_CLK36me3_up.gz -out CRK36me3_CLK36me3_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK36me3_CLK36me3_up.tab
plotProfile --dpi 720 -m CRKH2AZ_CLKH2AZ_up.gz -out CRKH2AZ_CLKH2AZ_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRKH2AZ_CLKH2AZ_up.tab

plotProfile --dpi 720 -m CRK9ac_CLK9ac_down.gz -out CRK9ac_CLK9ac_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK9ac_CLK9ac_down.tab
plotProfile --dpi 720 -m CRK27ac_CLK27ac_down.gz -out CRK27ac_CLK27ac_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27ac_CLK27ac_down.tab
plotProfile --dpi 720 -m CRK43_CLK43_down.gz -out CRK43_CLK43_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK43_CLK43_down.tab
plotProfile --dpi 720 -m CRK4me2_CLK4me2_down.gz -out CRK4me2_CLK4me2_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK4me2_CLK4me2_down.tab
plotProfile --dpi 720 -m CRK27me3_CLK27me3_down.gz -out CRK27me3_CLK27me3_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27me3_CLK27me3_down.tab
plotProfile --dpi 720 -m CRK36me3_CLK36me3_down.gz -out CRK36me3_CLK36me3_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK36me3_CLK36me3_down.tab
plotProfile --dpi 720 -m CRKH2AZ_CLKH2AZ_down.gz -out CRKH2AZ_CLKH2AZ_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRKH2AZ_CLKH2AZ_down.tab


####更正高粱gtf文件
awk -F'[;]' '{print $2}' Sorghum_bicolor.Sorghum_bicolor_NCBIv3.55.chr.gtf >trans.txt ###excel中操作
awk -F'[\t;]' '{print $9}' Sorghum_bicolor.Sorghum_bicolor_NCBIv3.55.chr.gtf >gene.txt 
paste trans.txt Sorghum_bicolor.Sorghum_bicolor_NCBIv3.55.chr.gtf | awk -F'[\t;]' '{print $2"\t"$3"\t"$4"\t"$5"\t"$6"\t"$7"\t"$8"\t"$9"\t"$10";"$1";"$12";"$13";"$14";"$15";"$16";"$17";"$18";"$19}' >sorghumR1.gtf
perl -p -i -e 's/;;/;/g' sorghumR1.gtf
perl -p -i -e 's/;;/;/g' sorghumR1.gtf
####生成RNA-seq可视化文件
cd /public/home/tllu
cut -f 1 /public/home/chaohe/sorghum/RNA-seq/fq/list.txt | while read i; do
kallisto quant -i /public/home/chaohe/sorghum/RNA-seq/db/Sorghum_bicolor.idx -o "$i" -t 16 -b 100 -l 150 -s 50  --genomebam --gtf  \
 /public/home/chaohe/sorghum/RNA-seq/db/sorghumR1.gtf \
 --chromosomes  /public/home/chaohe/sorghum/RNA-seq/db/Sorghum_bicolor.genome_table.txt \
 /public/home/chaohe/sorghum/RNA-seq/fq/"$i"_R1_paired.fq.gz /public/home/chaohe/sorghum/RNA-seq/fq/"$i"_R2_paired.fq.gz
 done
####合并重复，转换为bw
samtools merge CL.bam /public/home/tllu/CL6-1/pseudoalignments.bam /public/home/tllu/CL6-2/pseudoalignments.bam /public/home/tllu/CL6-3/pseudoalignments.bam
samtools merge CR.bam /public/home/tllu/CR6-1/pseudoalignments.bam /public/home/tllu/CR6-2/pseudoalignments.bam /public/home/tllu/CR6-3/pseudoalignments.bam
samtools merge PL.bam /public/home/tllu/PL6-1/pseudoalignments.bam /public/home/tllu/PL6-2/pseudoalignments.bam /public/home/tllu/PL6-3/pseudoalignments.bam
samtools merge PR.bam /public/home/tllu/PR6-1/pseudoalignments.bam /public/home/tllu/PR6-2/pseudoalignments.bam /public/home/tllu/PR6-3/pseudoalignments.bam

####利用hisat比对产生bam转bw可视化
module load  hisat2/2.2.1
module load seqkit/0.11.0
提取8号染色体序列，添加到Sorghum.fa中
cd /public/home/chaohe/db
vi chr8.txt
cat /public/home/chaohe/db/Sorghum_bicolor.Sorghum_bicolor_NCBIv3.dna.toplevel.fa | seqkit grep -f chr8.txt > chr8.fa
cat /public/home/chaohe/db/Sorghum.fa chr8.fa >SorghumR1.fa
mv SorghumR1.fa Sorghum.fa
awk '/^>/{if (l!="") print l; print; l=0; next}{l+=length($0)}END{print l}' Sorghum.fa  |cut -f 2 > Sorghum.txt
awk '/^>/{if (l!="") print l; print; l=0; next}{l+=length($0)}END{print l}' Sorghum_bicolor.Sorghum_bicolor_NCBIv3.dna.toplevel.fa  |cut -f 2 > SorghumNCBIv3.txt
###建索引
cd /public/home/chaohe/sorghum/RNA-seq/db
hisat2-build -p 20 /public/home/chaohe/db/Sorghum.fa Sorghum
###比对
cd /public/home/chaohe/sorghum/RNA-seq/fq
cut -f 1 /public/home/chaohe/sorghum/RNA-seq/fq/list.txt | while read i; do
hisat2 -p 20 \
-x /public/home/chaohe/sorghum/RNA-seq/db/Sorghum \
-1 /public/home/chaohe/sorghum/RNA-seq/fq/"$i"_R1_paired.fq /public/home/chaohe/sorghum/RNA-seq/fq/"$i"_R2_paired.fq \
-S "$i".sam \
--summary-file "$i".hisat2.summary
done
cut -f 1 /public/home/chaohe/sorghum/RNA-seq/fq/list.txt | while read i; do
samtools view -@ 8 -S "$i".sam -b -o "$i".bam
samtools sort "$i".bam -o "$i".sort.bam
samtools index -c "$i".sort.bam 
done
##合并
cd /public/home/chaohe/sorghum/RNA-seq/fq
samtools merge CL.sort.bam CL6-1.sort.bam CL6-2.sort.bam CL6-3.sort.bam
samtools merge PL.sort.bam PL6-1.sort.bam PL6-2.sort.bam PL6-3.sort.bam
samtools merge CR.sort.bam CR6-1.sort.bam CR6-2.sort.bam CR6-3.sort.bam
samtools merge PR.sort.bam PR6-1.sort.bam PR6-2.sort.bam PR6-3.sort.bam

samtools index -c CL.sort.bam
samtools index -c CR.sort.bam
samtools index -c PL.sort.bam
samtools index -c PR.sort.bam

bamCoverage --bam CL.sort.bam -o CL_RNA.bw
bamCoverage --bam PL.sort.bam -o PL_RNA.bw
bamCoverage --bam CR.sort.bam -o CR_RNA.bw
bamCoverage --bam PR.sort.bam -o PR_RNA.bw

#########作图可视化
##修改gtf文件中的转录本名称
excel中操作，把转录本ID改成基因ID
#生成ini文件
###利用pyGenomeTracks画，两个生物学重复都放上去
conda activate py36
module load pyGenomeTracks/3.5
cd /public/home/chaohe/sorghum/chip/align/RPKM
make_tracks_file --trackFiles CLK9ac_rep1_rpkm.bw CLK9ac_rep2_rpkm.bw PLK9ac_rep1_rpkm.bw PLK9ac_rep2_rpkm.bw CRK9ac_rep1_rpkm.bw CRK9ac_rep2_rpkm.bw \
 CLK27ac_rep1_rpkm.bw CLK27ac_rep2_rpkm.bw PLK27ac_rep1_rpkm.bw PLK27ac_rep2_rpkm.bw CRK27ac_rep1_rpkm.bw CRK27ac_rep2_rpkm.bw \
 CLK43_rep1_rpkm.bw CLK43_rep2_rpkm.bw PLK43_rep1_rpkm.bw PLK43_rep2_rpkm.bw CRK43_rep1_rpkm.bw CRK43_rep2_rpkm.bw \
 CLK36me3_rep1_rpkm.bw CLK36me3_rep2_rpkm.bw PLK36me3_rep1_rpkm.bw PLK36me3_rep2_rpkm.bw CRK36me3_rep1_rpkm.bw CRK36me3_rep2_rpkm.bw \
 CLKH2AZ_rep1_rpkm.bw CLKH2AZ_rep2_rpkm.bw PLKH2AZ_rep1_rpkm.bw PLKH2AZ_rep2_rpkm.bw CRKH2AZ_rep1_rpkm.bw CRKH2AZ_rep2_rpkm.bw \
 CLK4me2_rep1_rpkm.bw CLK4me2_rep2_rpkm.bw PLK4me2_rep1_rpkm.bw PLK4me2_rep2_rpkm.bw CRK4me2_rep1_rpkm.bw CRK4me2_rep2_rpkm.bw \
 CLK27me3_rep1_rpkm.bw CLK27me3_rep2_rpkm.bw PLK27me3_rep1_rpkm.bw PLK27me3_rep2_rpkm.bw CRK27me3_rep1_rpkm.bw CRK27me3_rep2_rpkm.bw \
 /public/home/chaohe/sorghum/RNA-seq/fq/CL_RNA.bw /public/home/chaohe/sorghum/RNA-seq/fq/PL_RNA.bw /public/home/chaohe/sorghum/RNA-seq/fq/CR_RNA.bw \
 sorghumR1.gtf \
  -o CL_PL_CR_R1.ini
pyGenomeTracks --tracks CL_PL_CR1.ini --region 1:19596784-19598508 --height 15 --width 3 -o SORBI_3001G212451.pdf 
pyGenomeTracks --tracks CL_PL_CR2.ini --region 1:74929607-74931731 --height 15 --width 3   -o SORBI_3001G476600.pdf 
pyGenomeTracks --tracks CL_PL_CR3.ini --region 3:53368965-53376625 --height 15 --width 3   -o SORBI_3003G203600.pdf 
pyGenomeTracks --tracks CL_PL_CR4.ini --region 4:59115044-59117226 --height 15 --width 3   -o SORBI_3004G243500.pdf 
pyGenomeTracks --tracks CL_PL_CR5.ini --region 4:62123141-62124379 --height 15 --width 3   -o SORBI_3004G278400.pdf 
pyGenomeTracks --tracks CL_PL_CR6.ini --region 6:45705443-45708778 --height 15 --width 3   -o SORBI_3006G087900.pdf 
pyGenomeTracks --tracks CL_PL_CR7.ini --region 7:56772162-56773696 --height 15 --width 3 -o SORBI_3007G139200.pdf 
pyGenomeTracks --tracks CL_PL_CR8.ini --region 7:65359548-65364201 --height 15 --width 3   -o SORBI_3007G226500.pdf 

make_tracks_file --trackFiles CLK9ac_rep1_rpkm.bw CLK9ac_rep2_rpkm.bw CRK9ac_rep1_rpkm.bw CRK9ac_rep2_rpkm.bw PRK9ac_rep1_rpkm.bw PRK9ac_rep2_rpkm.bw \
 CLK27ac_rep1_rpkm.bw CLK27ac_rep2_rpkm.bw CRK27ac_rep1_rpkm.bw CRK27ac_rep2_rpkm.bw PRK27ac_rep1_rpkm.bw PRK27ac_rep2_rpkm.bw \
 CLK43_rep1_rpkm.bw CLK43_rep2_rpkm.bw CRK43_rep1_rpkm.bw CRK43_rep2_rpkm.bw PRK43_rep1_rpkm.bw PRK43_rep2_rpkm.bw \
 CLK36me3_rep1_rpkm.bw CLK36me3_rep2_rpkm.bw CRK36me3_rep1_rpkm.bw CRK36me3_rep2_rpkm.bw PRK36me3_rep1_rpkm.bw PRK36me3_rep2_rpkm.bw \
 CLKH2AZ_rep1_rpkm.bw CLKH2AZ_rep2_rpkm.bw CRKH2AZ_rep1_rpkm.bw CRKH2AZ_rep2_rpkm.bw PRKH2AZ_rep1_rpkm.bw PRKH2AZ_rep2_rpkm.bw \
 CLK4me2_rep1_rpkm.bw CLK4me2_rep2_rpkm.bw CRK4me2_rep1_rpkm.bw CRK4me2_rep2_rpkm.bw PRK4me2_rep1_rpkm.bw PRK4me2_rep2_rpkm.bw \
 CLK27me3_rep1_rpkm.bw CLK27me3_rep2_rpkm.bw CRK27me3_rep1_rpkm.bw CRK27me3_rep2_rpkm.bw PRK27me3_rep1_rpkm.bw PRK27me3_rep2_rpkm.bw \
 /public/home/chaohe/sorghum/RNA-seq/fq/CL_RNA.bw /public/home/chaohe/sorghum/RNA-seq/fq/CR_RNA.bw /public/home/chaohe/sorghum/RNA-seq/fq/PR_RNA.bw \
  sorghumR1.gtf \
  -o CL_CR_PR.ini

pyGenomeTracks --tracks CL_CR_PR1.ini --region  1:6195685-6197404  --height 15 --width 3 -o  SORBI_3001G080300.pdf
pyGenomeTracks --tracks CL_CR_PR2.ini --region  1:65380643-65383348 --height 15 --width 3  -o  SORBI_3001G365100.pdf
pyGenomeTracks --tracks CL_CR_PR3.ini --region  1:71997758-72001265 --height 15 --width 3  -o  SORBI_3001G442500.pdf
pyGenomeTracks --tracks CL_CR_PR4.ini --region  2:56976063-56978576 --height 15 --width 3 -o  SORBI_3002G185800.pdf
pyGenomeTracks --tracks CL_CR_PR5.ini --region  3:1741171-1746058 --height 15 --width 3 -o  SORBI_3003G019700.pdf
pyGenomeTracks --tracks CL_CR_PR6.ini --region  3:1772849-1775089  --height 15 --width 3 -o  SORBI_3003G020500.pdf
pyGenomeTracks --tracks CL_CR_PR7.ini --region  3:53368965-53376625 --height 15 --width 3 -o  SORBI_3003G203600.pdf
pyGenomeTracks --tracks CL_CR_PR8.ini --region  4:10811044-10812027  --height 15 --width 3 -o  SORBI_3004G110700.pdf
pyGenomeTracks --tracks CL_CR_PR9.ini --region  4:48977979-48979099 --height 15 --width 3 -o  SORBI_3004G154400.pdf
pyGenomeTracks --tracks CL_CR_PR10.ini --region  4:59115044-59117226  --height 15 --width 3 -o  SORBI_3004G243500.pdf
pyGenomeTracks --tracks CL_CR_PR11.ini --region  4:67285704-67287857 --height 15 --width 3 -o  SORBI_3004G341600.pdf
pyGenomeTracks --tracks CL_CR_PR12.ini --region  5:68756261-68757304 --height 15 --width 3 -o  SORBI_3005G202300.pdf
pyGenomeTracks --tracks CL_CR_PR13.ini --region  6:1325272-1327204 --height 15 --width 3 -o  SORBI_3006G009000.pdf
pyGenomeTracks --tracks CL_CR_PR14.ini --region  6:1370536-1373307 --height 15 --width 3 -o  SORBI_3006G009100.pdf
pyGenomeTracks --tracks CL_CR_PR15.ini --region  6:47328961-47330684 --height 15 --width 3 -o  SORBI_3006G103000.pdf
pyGenomeTracks --tracks CL_CR_PR16.ini --region  6:54952131-54954631 --height 15 --width 3 -o  SORBI_3006G197100.pdf
pyGenomeTracks --tracks CL_CR_PR17.ini --region  6:60834877-60837191 --height 15 --width 3 -o  SORBI_3006G277500.pdf
pyGenomeTracks --tracks CL_CR_PR18.ini --region  6:60874713-60876219 --height 15 --width 3 -o  SORBI_3006G277800.pdf
pyGenomeTracks --tracks CL_CR_PR19.ini --region  7:5061543-5063416 --height 15 --width 3 -o  SORBI_3007G050200.pdf
pyGenomeTracks --tracks CL_CR_PR20.ini --region  7:5568927-5572772  --height 15 --width 3 -o  SORBI_3007G054900.pdf
pyGenomeTracks --tracks CL_CR_PR21.ini --region  8:62072508-62078284  --height 15 --width 3 -o  SORBI_3008G186100.pdf
pyGenomeTracks --tracks CL_CR_PR22.ini --region  9:1556843-1558610 --height 15 --width 3 -o  SORBI_3009G016633.pdf
pyGenomeTracks --tracks CL_CR_PR23.ini --region  9:52641822-52643877 --height 15 --width 3 -o  SORBI_3009G170700.pdf
pyGenomeTracks --tracks CL_CR_PR24.ini --region  10:58330630-58333953 --height 15 --width 3 -o  SORBI_3010G241900.pdf


组蛋白修饰的顺序为（H3K9ac，H3K27ac，H3K4me3，H3K36me3，H2AZ，H3K4me2，H3K27me3，RNA）
SORBI_3001G212451
SORBI_3001G476600
SORBI_3003G203600
SORBI_3004G243500
SORBI_3004G278400
SORBI_3006G087900
SORBI_3007G139200
SORBI_3007G226500
以上用CL,PL,CR

SORBI_3004G154400
SORBI_3001G080300
SORBI_3001G365100
SORBI_3001G442500
SORBI_3002G185800
SORBI_3003G019700
SORBI_3003G020500
SORBI_3003G203600
SORBI_3004G110700
SORBI_3004G243500
SORBI_3004G341600
SORBI_3005G202300
SORBI_3006G009000
SORBI_3006G009100
SORBI_3006G103000
SORBI_3006G197100
SORBI_3006G277500
SORBI_3006G277800
SORBI_3007G050200
SORBI_3007G054900
SORBI_3008G186100
SORBI_3009G016633
SORBI_3009G170700
SORBI_3010G241900
以上用CL,CR,PR

#####分析外显子倾向性
Exon-intron enrichment of histone marks was analyzed by counting
reads in exons proportionally divided into 100 sections, and in introns,
250 bp upstream and downstream of exon, proportionally divided into
50 sections, respectively

通过计算外显子和内含子的读数，分析组蛋白标记的富集情况。
外显子中的读数按比例分成100个部分，内含子中的读数按比例分成100个部分。
外显子上游和下游250bp，按比例分为 分别为50个部分

#内含子上下游250bp,内含子100bp一个bin，侧翼是50bp

########提取内含子
cd /public/home/chaohe/sorghum/RNA-seq/db
awk 'BEGIN{OFS="\t";} $3=="exon" {print $1,$4-1,$5}' Sorghum_bicolor.Sorghum_bicolor_NCBIv3.55.chr.gtf | sortBed | mergeBed -i - >sorghum.exon.gtf
#选择GTF中gene的feature，然后排除merged exon
awk 'BEGIN{OFS="\t";} $3=="gene" {print $1,$4-1,$5}' Sorghum_bicolor.Sorghum_bicolor_NCBIv3.55.chr.gtf | sortBed | subtractBed -a - -b sorghum.exon.gtf >sorghum.intron.bed
#不同组蛋白标签的外显子倾向性分布metaplot（根CR和叶CL分开做）
module  load deepTools/3.5.0
cd /public/home/chaohe/sorghum/chip/align/merged_rep_dingliang
bsub  -J CR_intron -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 250 -a 250 -m 1000 \
 -R /public/home/chaohe/sorghum/RNA-seq/db/sorghum_intron.bed -S CRK27ac_rpkm.bw \
 CRK9ac_rpkm.bw CRK36me3_rpkm.bw CRK43_rpkm.bw CRK27me3_rpkm.bw CRK4me2_rpkm.bw CRKH2AZ_rpkm.bw \
 -o CR_intron.mat.gz \
 --outFileSortedRegions CR_intron.bed"
bsub  -J CR_intron_100 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 250 -a 250 -m 1000 \
 -R /public/home/chaohe/sorghum/RNA-seq/db/sorghum_intron.bed 20 -S CRK27ac_rpkm.bw \
 CRK9ac_rpkm.bw CRK36me3_rpkm.bw CRK43_rpkm.bw CRK27me3_rpkm.bw CRK4me2_rpkm.bw CRKH2AZ_rpkm.bw \
 -o CR_intron_100.mat.gz \
 --outFileSortedRegions CR_intron_100.bed"
bsub  -J CL_intron -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 250 -a 250 -m 1000 \
 -R /public/home/chaohe/sorghum/RNA-seq/db/sorghum_intron.bed  -S CLK27ac_rpkm.bw \
 CLK9ac_rpkm.bw CLK36me3_rpkm.bw CLK43_rpkm.bw CLK27me3_rpkm.bw CLK4me2_rpkm.bw CLKH2AZ_rpkm.bw \
 -o CL_intron.mat.gz \
 --outFileSortedRegions CL_intron.bed"
bsub  -J CL_intron_100 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 250 -a 250 -m 1000 \
 -R /public/home/chaohe/sorghum/RNA-seq/db/sorghum_intron.bed -S CLK27ac_rpkm.bw \
 CLK9ac_rpkm.bw CLK36me3_rpkm.bw CLK43_rpkm.bw CLK27me3_rpkm.bw CLK4me2_rpkm.bw CLKH2AZ_rpkm.bw \
 -o CL_intron_100.mat.gz \
 --outFileSortedRegions CL_intron_100.bed"
plotProfile --dpi 720 -m CR_intron.mat.gz -out CR_intron.profile.pdf --plotFileFormat pdf --perGroup
plotProfile --dpi 720 -m CL_intron.mat.gz -out CL_intron.profile.pdf --plotFileFormat pdf
plotProfile --dpi 720 -m CL_intron_100.mat.gz -out CL_intron.profile.pdf --plotFileFormat pdf --perGroup

for i in CRK27ac_rpkm CRK9ac_rpkm CRK36me3_rpkm CRK43_rpkm CRK27me3_rpkm CRK4me2_rpkm CRKH2AZ_rpkm CLK27ac_rpkm CLK9ac_rpkm CLK36me3_rpkm CLK43_rpkm CLK27me3_rpkm CLK4me2_rpkm CLKH2AZ_rpkm
do
computeMatrix scale-regions -p 10 -b 150 -a 150 -m 150 \
 -R /public/home/chaohe/sorghum/RNA-seq/db/sorghum.intron.bed -S "$i".bw -o "$i".mat.gz --outFileSortedRegions "$i".bed \
 --samplesLabel "$i"
plotProfile --dpi 720 -m "$i".mat.gz -out "$i".profile.pdf --plotFileFormat pdf --startLabel intron --endLabel intron --samplesLabel "$i" --regionsLabel "$i"  --yMin 0 --yMax 90
done

computeMatrix scale-regions -p 10 -b 150 -a 150 -m 150 \
 -R /public/home/chaohe/sorghum/RNA-seq/db/sorghum.intron.bed -S CRK27ac_rpkm CRK9ac_rpkm CRK36me3_rpkm CRK43_rpkm CRK27me3_rpkm CRK4me2_rpkm CRKH2AZ_rpkm CLK27ac_rpkm CLK9ac_rpkm CLK36me3_rpkm CLK43_rpkm CLK27me3_rpkm CLK4me2_rpkm CLKH2AZ_rpkm \
 -o total.mat.gz --outFileSortedRegions total.bed
plotProfile --dpi 720 -m total.mat.gz -out total.profile.pdf --plotFileFormat pdf --startLabel intron --endLabel intron

###########补充图片
######所有的H3K27ac的metaplots 用基因的上游-1.5kb到下游1.5kb的区域提取的reads做
####提取落在基因上游-1.5kb到下游1.5kb的reads，看k27ac.lsf文件
##生成bed文件
cd /public/home/chaohe/sorghum/chip/align
mkdir H3K27acMetaplot
cd /public/home/chaohe/sorghum/chip/align/H3K27acMetaplot
awk '{print $1"\t"$2-1500"\t"$3+1500"\t"$4"\t"$5"\t"$6}' /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed  >updown1500_gene.bed
###根据bed提取H3K27ac的reads生成bam再转bw
cd /public/home/chaohe/sorghum/chip/align/H3K27acMetaplot
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bedtools  intersect  -a ../CLK27ac_rep0.bam -b updown1500_gene.bed > CLK27ac_reads.bam"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bedtools  intersect  -a ../CRK27ac_rep0.bam -b updown1500_gene.bed > CRK27ac_reads.bam"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bedtools  intersect  -a ../PLK27ac_rep0.bam -b updown1500_gene.bed > PLK27ac_reads.bam"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bedtools  intersect  -a ../PRK27ac_rep0.bam -b updown1500_gene.bed > PRK27ac_reads.bam"
samtools index -c CLK27ac_reads.bam
samtools index -c CRK27ac_reads.bam
samtools index -c PLK27ac_reads.bam
samtools index -c PRK27ac_reads.bam
##标准化
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam CLK27ac_reads.bam -o CLK27ac_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam CRK27ac_reads.bam -o CRK27ac_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam PLK27ac_reads.bam -o PLK27ac_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "bamCoverage --bam PRK27ac_reads.bam -o PRK27ac_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
#绘制趋势图
computeMatrix scale-regions -p 10 -S CLK27ac_rpkm.bw CRK27ac_rpkm.bw PLK27ac_rpkm.bw PRK27ac_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_gene.bed -b 1500 -a 1500 -m 1500 --skipZeros -o K27acR1.mat.gz
plotProfile --dpi 720 -m K27acR1.mat.gz -out K27acR1.profile.pdf --plotFileFormat pdf --perGroup
plotHeatmap -m K27acR1.mat.gz -out K27acR1_heatmap.pdf
####根和叶差异表达基因上下游1.5kb,图4A中的H3K27me3 metaplot
#上调基因
cd /public/home/chaohe/sorghum/chip/align/H3K27acMetaplot
computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R ../crvscl_up_gebe.bed --binSize 20  -S CRK27ac_rpkm.bw CLK27ac_rpkm.bw --skipZeros -o CRK27ac_CLK27ac_up.gz  --outFileSortedRegions CRK27ac_CLK27ac_up_genes.bed
#下调基因
computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R ../crvscl_down_gene.bed --binSize 20  -S CRK27ac_rpkm.bw CLK27ac_rpkm.bw --skipZeros -o CRK27ac_CLK27ac_down.gz  --outFileSortedRegions CRK27ac_CLK27ac_down_genes.bed
plotProfile --dpi 720 -m CRK27ac_CLK27ac_up.gz -out CRK27ac_CLK27ac_up.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27ac_CLK27ac_up.tab
plotProfile --dpi 720 -m CRK27ac_CLK27ac_down.gz -out CRK27ac_CLK27ac_down.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27ac_CLK27ac_down.tab

####根处理和对照差异表达基因上下游1.5kb,图5中的H3K27me3 metaplot
#上调基因
cd /public/home/chaohe/sorghum/chip/align/H3K27acMetaplot
computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R /public/home/zhruan/figure/pr_vs_cr_up.bed --binSize 20  -S PRK27ac_rpkm.bw CRK27ac_rpkm.bw --skipZeros -o PRK27ac_CRK27ac_up.gz  --outFileSortedRegions PRK27ac_CRK27ac_up_genes.bed
#下调基因
computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R /public/home/zhruan/figure/pr_vs_cr_down.bed --binSize 20  -S PRK27ac_rpkm.bw CRK27ac_rpkm.bw --skipZeros -o PRK27ac_CRK27ac_down.gz  --outFileSortedRegions PRK27ac_CRK27ac_down_genes.bed
plotProfile --dpi 720 -m PRK27ac_CRK27ac_up.gz -out PRK27ac_CRK27ac_up.pdf --plotFileFormat pdf --perGroup  --outFileNameData PRK27ac_CRK27ac_up.tab
plotProfile --dpi 720 -m PRK27ac_CRK27ac_down.gz -out PRK27ac_CRK27ac_down.pdf --plotFileFormat pdf --perGroup  --outFileNameData PRK27ac_CRK27ac_down.tab
####叶处理和对照差异表达基因上下游1.5kb,图5中的H3K27me3 metaplot
#上调基因
cd /public/home/chaohe/sorghum/chip/align/H3K27acMetaplot
computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R /public/home/zhruan/figure/pl_vs_cl_up.bed --binSize 20  -S PLK27ac_rpkm.bw CLK27ac_rpkm.bw --skipZeros -o PLK27ac_CLK27ac_up.gz  --outFileSortedRegions PLK27ac_CLK27ac_up_genes.bed
#下调基因
computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R /public/home/zhruan/figure/pl_vs_cl_down.bed --binSize 20  -S PLK27ac_rpkm.bw CLK27ac_rpkm.bw --skipZeros -o PLK27ac_CLK27ac_down.gz  --outFileSortedRegions PLK27ac_CLK27ac_down_genes.bed
plotProfile --dpi 720 -m PLK27ac_CLK27ac_up.gz -out PLK27ac_CLK27ac_up.pdf --plotFileFormat pdf --perGroup  --outFileNameData PLK27ac_CLK27ac_up.tab
plotProfile --dpi 720 -m PLK27ac_CLK27ac_down.gz -out PLK27ac_CLK27ac_down.pdf --plotFileFormat pdf --perGroup  --outFileNameData PLK27ac_CLK27ac_down.tab

######把figure4A中H3K27me3的metaplots分成两部分做一下试试
cd /public/home/chaohe/sorghum/chip/align
mkdir H3K27me3Metaplot
cd /public/home/chaohe/sorghum/chip/align/H3K27me3Metaplot
perl -p -i -e 's/^M//g' *bed
#提取positive的456个基因做metaplot
module load deepTools/3.3.0
computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R P456_gene.bed --binSize 20  -S ../CRK27me3_rpkm.bw ../CLK27me3_rpkm.bw --skipZeros -o CRK27me3_CLK27me3_P456_gene.gz  --outFileSortedRegions CRK27me3_CLK27me3_P456.bed
#用剩下的所有在root中下降表达基因的H3K27me3做metaplot
computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R left_down_expressed_gene.bed --binSize 20  -S ../CRK27me3_rpkm.bw ../CLK27me3_rpkm.bw --skipZeros -o CRK27me3_CLK27me3_left_down_expressed_gene.gz  --outFileSortedRegions CRK27me3_CLK27me3_left_down_expressed_gene.bed
#提取positive的241个基因做metaplot
computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R P241_gene.bed --binSize 20  -S ../CRK27me3_rpkm.bw ../CLK27me3_rpkm.bw --skipZeros -o CRK27me3_CLK27me3_P241_gene.gz  --outFileSortedRegions CRK27me3_CLK27me3_P241_gene.bed
#提取剩下的所有在root中上升表达基因的H3K27me3做metaplot
computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R left_up_expressed_gene.bed --binSize 20  -S ../CRK27me3_rpkm.bw ../CLK27me3_rpkm.bw --skipZeros -o CRK27me3_CLK27me3_left_up_expressed_gene.gz  --outFileSortedRegions CRK27me3_CLK27me3_left_up_expressed_gene.bed
plotProfile --dpi 720 -m CRK27me3_CLK27me3_P456_gene.gz -out CRK27me3_CLK27me3_P456_gene.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27me3_CLK27me3_P456_gene.tab
plotProfile --dpi 720 -m CRK27me3_CLK27me3_left_down_expressed_gene.gz -out CRK27me3_CLK27me3_left_down_expressed_gene.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27me3_CLK27me3_left_down_expressed_gene.tab
plotProfile --dpi 720 -m CRK27me3_CLK27me3_P241_gene.gz -out CRK27me3_CLK27me3_P241_gene.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27me3_CLK27me3_P241_gene.tab
plotProfile --dpi 720 -m CRK27me3_CLK27me3_left_up_expressed_gene.gz -out CRK27me3_CLK27me3_left_up_expressed_gene.pdf --plotFileFormat pdf --perGroup   --outFileNameData CRK27me3_CLK27me3_left_up_expressed_gene.tab
#合并所有,检查是否有问题
cat P456_gene.bed left_down_expressed_gene.bed  >down_gene.bed
computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R down_gene.bed --binSize 20  -S ../CRK27me3_rpkm.bw ../CLK27me3_rpkm.bw --skipZeros -o down_gene.gz  --outFileSortedRegions CRK27me3_CLK27me3_down_gene.bed
plotProfile --dpi 720 -m down_gene.gz -out down_gene.pdf --plotFileFormat pdf --perGroup   --outFileNameData down_gene.tab

####看FigS5 A和C 两类基因在根和叶中其他修饰变化的数量（做个柱状图）
cd /public/home/chaohe/sorghum/chip/align/H3K27me3Metaplot
P456_gene.bed 
P241_gene.bed



######把long H3K27me3 region 中有变化的部分找出来（之前是以基因为单位）
#策略一：合并CR和CL的peak，以及间隔1000 bp以内的peak，定量后用DEseq2做比较，不用
cd /public/home/chaohe/sorghum/chip/align/H3K27me3Metaplot
cat /public/home/chaohe/sorghum/chip/macs2/broad_rep-spp-0.00001/CRK27me3_rep1.peaks.bed /public/home/chaohe/sorghum/chip/macs2/broad_rep-spp-0.00001/CRK27me3_rep2.peaks.bed /public/home/chaohe/sorghum/chip/macs2/broad_rep-spp-0.00001/CLK27me3_rep1.peaks.bed /public/home/chaohe/sorghum/chip/macs2/broad_rep-spp-0.00001/CLK27me3_rep2.peaks.bed > CRCL.peaks.bed
sort -k1,1 -k2n,2 CRCL.peaks.bed | bedtools merge -i - -d 1000 -c 4 -o collapse >CRCL_H3K27me3_merged.peaks.bed
#vi total.txt
#CLK27me31	CLK27me31	CLK27me31
#CLK27me32	CLK27me32	CLK27me32
#CRK27me31	CRK27me31	CRK27me31
#CRK27me32	CRK27me32	CRK27me32
cut -f 1 total.txt | while read i;
do
bedtools  intersect  -a /public/home/chaohe/sorghum/chip/align/"$i".final.bam -b CRCL_H3K27me3_merged.peaks.bed > "$i"_gene.bam
samtools index -c "$i"_gene.bam
#bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50
done
####定量分析
awk '{print $4"\t"$1"\t"$2"\t"$3"\t."}' CRCL_H3K27me3_merged.peaks.bed >megePeak.saf
#featurecount计算count值
cut -f 1 total.txt | while read i; do
/public/home/chaohe/subread-2.0.2-Linux-x86_64/bin/featureCounts -p -P -B -C -T 4 \
 -a megePeak.saf \
 -F SAF \
 -o "$i"_counts_subread.txt \
 "$i"_gene.bam
done
#策略二：合并CR和CL的peak，不需要合并间隔多少的peak，定量后用DEseq2做比较
cd /public/home/chaohe/sorghum/chip/align/H3K27me3Metaplot
cat /public/home/chaohe/sorghum/chip/macs2/broad_rep-spp-0.00001/CRK27me3_rep1.peaks.bed /public/home/chaohe/sorghum/chip/macs2/broad_rep-spp-0.00001/CRK27me3_rep2.peaks.bed /public/home/chaohe/sorghum/chip/macs2/broad_rep-spp-0.00001/CLK27me3_rep1.peaks.bed /public/home/chaohe/sorghum/chip/macs2/broad_rep-spp-0.00001/CLK27me3_rep2.peaks.bed > CRCL.peaks.bed
sort -k1,1 -k2n,2 CRCL.peaks.bed | bedtools merge -i -  -c 4 -o collapse >CRCL_H3K27me3_merged.peaks.bed
#vi total.txt
#CLK27me31	CLK27me31	CLK27me31
#CLK27me32	CLK27me32	CLK27me32
#CRK27me31	CRK27me31	CRK27me31
#CRK27me32	CRK27me32	CRK27me32
cut -f 1 total.txt | while read i;
do
bedtools  intersect  -a /public/home/chaohe/sorghum/chip/align/"$i".final.bam -b CRCL_H3K27me3_merged.peaks.bed > "$i"_gene.bam
samtools index -c "$i"_gene.bam
#bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50
done
####定量分析
awk '{print $4"\t"$1"\t"$2"\t"$3"\t."}' CRCL_H3K27me3_merged.peaks.bed >megePeak.saf
#featurecount计算count值
cut -f 1 total.txt | while read i; do
/public/home/chaohe/subread-2.0.2-Linux-x86_64/bin/featureCounts -p -P -B -C -T 4 \
 -a megePeak.saf \
 -F SAF \
 -o "$i"_counts_subread.txt \
 "$i"_gene.bam
done


######deepTools绘制PCA聚类图
cd /public/home/chaohe/sorghum/chip/align
module load deepTools/3.5.0
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "multiBamSummary bins -b *final.bam -o results.npz"
plotPCA -in results.npz -o PCA_readCounts.pdf -T "PCA of read counts"

import numpy as np

data = np.load("results.npz")
data.files
matrix = data['matrix']
np.savetxt("matrix.csv",matrix,fmt='%d')
sample = data['labels']
np.savetxt("labels.csv",sample,fmt='%d')

######################计算每个peak的峰高##############
cd /public/home/chaohe/sorghum/chip/macs2/narrow-spp-0.00001


###########找基因上的修饰的最高点，并定量，画20bp为1个bin, 这是单个重复都做了的
###将落在基因上的reads标准化后的bam文件，转为bedgraph，提取每个基因的最大值的bin及其所在的位置
cd /public/home/chaohe/sorghum/chip/align/落在基因上的reads
cut -f 1 ../../meta/total.txt | while read i;
do
bigWigToBedGraph  "$i"_rpkm.bw  "$i"_rpkm.bedGraph
done
###将区间定位到基因上，留下最大值
cp /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed Sorghum_geneR1.bed
sort -k1,1 -k2n,2 Sorghum_geneR1.bed -o Sorghum_geneR1.bed
cut -f 1 ../../meta/total.txt | while read i; do bedtools closest -D ref -t all -mdb all -a "$i"_rpkm.bedGraph -b Sorghum_geneR1.bed | awk '{if ($11 == 0) print $0}' | sort -k1,1 -k8,8 -k4nr,4 | awk '!a[$8]++'  >"$i"_gene_top.bed ;done
for i in CRKH2AZ1 CRKH2AZ2;
do
samtools index -c "$i"_gene.bam
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bedGraph --binSize 20 --normalizeUsing RPKM --smoothLength 50 -of bedgraph
done
for i in CRKH2AZ1 CRKH2AZ2;
do 
bedtools closest -D ref -t all -mdb all -a "$i"_rpkm.bedGraph -b Sorghum_geneR1.bed | awk '{if ($11 == 0) print $0}' | sort -k1,1 -k8,8 -k4nr,4 | awk '!a[$8]++'  >"$i"_gene_top.bed
done
###找基因上的修饰的最高点，并定量，画20bp为1个bin, 合并重复
调取落在基因上的reads，计算tpm值,合并重复
cd /public/home/chaohe/sorghum/chip/align/merged_rep_dingliang
cut -f 1 ../../meta/narrow.list | uniq | while read i;
do
bigWigToBedGraph  "$i"_rpkm.bw  "$i"_rpkm.bedGraph
done
#补充
for i in PRK43 PRK4me2
do
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50
samtools index -c "$i"_gene.bam
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.begGraph --binSize 20 --normalizeUsing RPKM --smoothLength 50 -of bedgraph
done
cut -f 1 ../../meta/narrow.list | uniq | while read i;
do 
bedtools closest -D ref -t all -mdb all -a "$i"_rpkm.bedGraph -b ../落在基因上的reads/Sorghum_geneR1.bed | awk '{if ($11 == 0) print $0}' | sort -k1,1 -k8,8 -k4nr,4 | awk '!a[$8]++'  >"$i"_gene_top.bed
done

for i in PLKH2AZ
do
bedtools  intersect  -a ../"$i"_rep0.bam -b /public/home/chaohe/sorghum/RNA-seq/db/geneR1.bed > "$i"_gene.bam
samtools index -c "$i"_gene.bam
bamCoverage --bam "$i"_gene.bam -o "$i"_rpkm.bedGraph --binSize 20 --normalizeUsing RPKM --smoothLength 50 -of bedgraph
done


cut -f 1 ../../meta/broad0.list | uniq | while read i;
do
bigWigToBedGraph  "$i"_rpkm.bw  "$i"_rpkm.bedGraph
done

cut -f 1 ../../meta/broad0.list | uniq | while read i;
do 
bedtools closest -D ref -t all -mdb all -a "$i"_rpkm.bedGraph -b ../落在基因上的reads/Sorghum_geneR1.bed | awk '{if ($11 == 0) print $0}' | sort -k1,1 -k8,8 -k4nr,4 | awk '!a[$8]++'  >"$i"_gene_top.bed
done


######C4基因的IGV
conda activate py36
module load pyGenomeTracks/3.5
cd /public/home/chaohe/sorghum/chip/align/RPKM
pyGenomeTracks --tracks CL_CR1.ini --region  3:57297794-57310635 --height 15 --width 3 -o  SORBI_3003G234200.pdf
pyGenomeTracks --tracks CL_CR2.ini --region  3:57297761-57310886 --height 15 --width 3 -o  SORBI_3003G234400.pdf
pyGenomeTracks --tracks CL_CR3.ini --region  7:60,149,309-60,153,590 --height 15 --width 3 -o  SORBI_3007G166300.pdf
pyGenomeTracks --tracks CL_CR4.ini --region  3:3,316,431-3,323,180 --height 15 --width 3 -o  SORBI_3003G036200.pdf
pyGenomeTracks --tracks CL_CR5.ini --region  10:47,243,212-47,254,790 --height 15 --width 3 -o  SORBI_3010G160700.pdf
pyGenomeTracks --tracks CL_CR6.ini --region  4:66,988,332-66,990,464 --height 15 --width 3 -o  SORBI_3004G338000.pdf
pyGenomeTracks --tracks CL_CR7.ini --region  9:48,723,979-48,740,853 --height 15 --width 3 -o  SORBI_3009G132900.pdf
pyGenomeTracks --tracks CL_CR8.ini --region  2:69,518,390-69,521,706 --height 15 --width 3 -o  SORBI_3002G324400.pdf
pyGenomeTracks --tracks CL_CR9.ini --region  2:69,518,390-69,521,706 --height 15 --width 3 -o  SORBI_3005G042000.pdf
#pyGenomeTracks --tracks CL_CR10.ini --region  2:62,133,870-62,139,353 --height 15 --width 3 -o  SORBI_3002G230100.pdf
#pyGenomeTracks --tracks CL_CR11.ini --region  3:57,316,985-57,323,883 --height 15 --width 3 -o  SORBI_3003G234500.pdf
#pyGenomeTracks --tracks CL_CR12.ini --region  3:57,321,908-57,329,962 --height 15 --width 3 -o  SORBI_3003G234600.pdf
#pyGenomeTracks --tracks CL_CR13.ini --region  7:60,143,233-60,148,848 --height 15 --width 3 -o  SORBI_3007G166200.pdf
#pyGenomeTracks --tracks CL_CR14.ini --region  3:3,297,323-3,307,602 --height 15 --width 3 -o  SORBI_3003G036000.pdf
#pyGenomeTracks --tracks CL_CR15.ini --region  3:61,584,522-61,592,111 --height 15 --width 3 -o  SORBI_3003G280900.pdf
#pyGenomeTracks --tracks CL_CR16.ini --region  3:62,488,642-62,493,319 --height 15 --width 3 -o  SORBI_3003G292400.pdf
#pyGenomeTracks --tracks CL_CR17.ini --region  9:8,033,460-8,039,209 --height 15 --width 3 -o  SORBI_3009G069600.pdf
#pyGenomeTracks --tracks CL_CR18.ini --region  2:52,120,129-52,129,601 --height 15 --width 3 -o  SORBI_3002G167000.pdf
#pyGenomeTracks --tracks CL_CR19.ini --region  3:8,885,248-8,898,169 --height 15 --width 3 -o  SORBI_3003G100600.pdf
#pyGenomeTracks --tracks CL_CR20.ini --region  3:63,250,660-63,262,241 --height 15 --width 3 -o  SORBI_3003G301800.pdf
#pyGenomeTracks --tracks CL_CR21.ini --region  4:10,201,145-10,209,142 --height 15 --width 3 -o  SORBI_3004G106900.pdf
#pyGenomeTracks --tracks CL_CR22.ini --region  7:38,043,808-38,051,804 --height 15 --width 3 -o  SORBI_3007G106500.pdf
#pyGenomeTracks --tracks CL_CR23.ini --region  4:56,987,149-56,989,581 --height 15 --width 3 -o  SORBI_3004G219900.pdf
#pyGenomeTracks --tracks CL_CR24.ini --region  6:50,998,028-51,002,688 --height 15 --width 3 -o  SORBI_3006G148300.pdf
#pyGenomeTracks --tracks CL_CR25.ini --region  1:61,371,797-61,381,774 --height 15 --width 3 -o  SORBI_3001G326900.pdf
#pyGenomeTracks --tracks CL_CR26.ini --region  2:69,521,411-69,525,242 --height 15 --width 3 -o  SORBI_3002G324500.pdf
#pyGenomeTracks --tracks CL_CR27.ini --region  2:69,535,682-69,539,967 --height 15 --width 3 -o  SORBI_3002G324700.pdf
pyGenomeTracks --tracks CL_CR1_1.ini --region  3:57297794-57310635 --height 15 --width 3 -o  SORBI_3003G234200.pdf
pyGenomeTracks --tracks CL_CR2_1.ini --region  3:57311563-57316950 --height 15 --width 3 -o  SORBI_3003G234400.pdf
pyGenomeTracks --tracks CL_CR3_1.ini --region  7:60,149,309-60,153,590 --height 15 --width 3 -o  SORBI_3007G166300.pdf
pyGenomeTracks --tracks CL_CR4_1.ini --region  3:3,316,431-3,323,180 --height 15 --width 3 -o  SORBI_3003G036200.pdf
pyGenomeTracks --tracks CL_CR5_1.ini --region  10:47,243,212-47,254,790 --height 15 --width 3 -o  SORBI_3010G160700.pdf
pyGenomeTracks --tracks CL_CR6_1.ini --region  4:66,988,332-66,990,464 --height 15 --width 3 -o  SORBI_3004G338000.pdf
pyGenomeTracks --tracks CL_CR7_1.ini --region  9:48,723,979-48,740,853 --height 15 --width 3 -o  SORBI_3009G132900.pdf
pyGenomeTracks --tracks CL_CR8_1.ini --region  2:69,518,390-69,521,706 --height 15 --width 3 -o  SORBI_3002G324400.pdf
pyGenomeTracks --tracks CL_CR9_1.ini --region  5:3,875,658-3,877,675 --height 15 --width 3 -o  SORBI_3005G042000.pdf

######POD基因的IGV
SORBI_3009G055300  7000
SORBI_3006G277500  8000
SORBI_3001G080300  400
SORBI_3010G161800  800
SORBI_3009G186600  200
SORBI_3003G320800  1100
SORBI_3004G105200  200
SORBI_3004G359300  300

pyGenomeTracks --tracks CL_CR31.ini --region  9:5,577,254-5,580,365 --height 15 --width 3 -o  SORBI_3009G055300.pdf
pyGenomeTracks --tracks CL_CR32.ini --region  6:60,834,394-60,837,560 --height 15 --width 3 -o  SORBI_3006G277500.pdf
pyGenomeTracks --tracks CL_CR33.ini --region  1:6,195,274-6,197,785 --height 15 --width 3 -o  SORBI_3001G080300.pdf
pyGenomeTracks --tracks CL_CR34.ini --region  10:47,882,866-47,885,870 --height 15 --width 3 -o  SORBI_3010G161800.pdf
pyGenomeTracks --tracks CL_CR35.ini --region  9:53,939,747-53,942,584 --height 15 --width 3 -o  SORBI_3009G186600.pdf
pyGenomeTracks --tracks CL_CR36.ini --region  3:64,841,273-64,844,423 --height 15 --width 3 -o  SORBI_3003G320800.pdf
pyGenomeTracks --tracks CL_CR37.ini --region  4:9,917,963-9,922,210 --height 15 --width 3 -o  SORBI_3004G105200.pdf
pyGenomeTracks --tracks CL_CR38.ini --region  4:68,586,903-68,593,233 --height 15 --width 3 -o  SORBI_3004G359300.pdf

##############提取
#分别提取K36me3_up同时H2ZA_down、K36me3_down同时H2ZA_up的基因
cd /public/home/chaohe/sorghum/chip/align
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R K36me3_down_vs_KH1AZ_up_gene.bed --binSize 20  -S CLK36me3_rpkm.bw CRK36me3_rpkm.bw CLKH2AZ_rpkm.bw CRKH2AZ_rpkm.bw --skipZeros -o CL_CR_K36me3_down_vs_KH1AZ_up_gene.gz  --outFileSortedRegions CL_CR_K36me3_down_vs_KH1AZ_up_gene.bed"
bsub  -J 242-1 -n 8 -o %J.3.out -e %J.3.err  -q smp -R "rusage[mem=80GB]" "computeMatrix scale-regions -p 10 -b 1500 -a 1500 -m 1500  -R K36me3_up_vs_H2AZ_down_gene.bed --binSize 20  -S CLK36me3_rpkm.bw CRK36me3_rpkm.bw CLKH2AZ_rpkm.bw CRKH2AZ_rpkm.bw --skipZeros -o CL_CR_K36me3_up_vs_H2AZ_down.gz  --outFileSortedRegions CL_CR_K36me3_up_vs_H2AZ_down.bed"
plotProfile --dpi 720 -m CL_CR_K36me3_up_vs_H2AZ_down.gz -out CL_CR_K36me3_up_vs_H2AZ_down.profile.pdf --plotFileFormat pdf --perGroup  --startLabel TSS --endLabel TES
plotProfile --dpi 720 -m CL_CR_K36me3_down_vs_KH1AZ_up_gene.gz -out CL_CR_K36me3_down_vs_KH1AZ_up.profile.pdf --plotFileFormat pdf  --perGroup --startLabel TSS --endLabel TES

####绘制个别区域的igv图
conda activate py36
module load pyGenomeTracks/3.5
cd /public/home/chaohe/sorghum/chip/align/RPKM
#这两个区间是H3K27me3和H3K36me3
pyGenomeTracks --tracks CL_CRx1.ini --region  5:5180000-5500000 --height 15 --width 3 -o  5-5180000-5500000.pdf
pyGenomeTracks --tracks CL_CRx1.ini --region  5:69200000-69350000 --height 15 --width 3 -o  5-69200000-69350000.pdf
#这三个基因是H3K36me3和H2A.Z，图3f
pyGenomeTracks --tracks CL_CRx5.ini --region  2:70,410,514-70,418,860 -o  SORBI_3002G336200.pdf
pyGenomeTracks --tracks CL_CRx5.ini --region  6:54,982,197-54,986,908 -o  SORBI_3006G197300.pdf
pyGenomeTracks --tracks CL_CRx5.ini --region  10:55,653,840-55,668,232  -o  SORBI_3010G213600.pdf

######候选基因单倍型分析
#将vcf转为bed
plink --vcf output.snp.filtered.vcf.gz --allow-extra-chr --maf 0.05 --make-bed  --out output.snp.filtered
#给SNP添加ID
mv output.snp.filtered.bim output.snp.filtered.bim1
awk '{print $1"\tchr_"$4"\t"$3"\t"$4"\t"$5"\t"$6}'  output.snp.filtered.bim1 > output.snp.filtered.bim

####爬取表型数据,和平帮忙做
module load Python/3.6.5
#pip install lxml
#python
import pandas as pd
df = pd.read_html("http://www.air-level.com/air/beijing/", encoding='utf-8',header=0)[0]
df.head()
####调取现有材料的基因型
cd /public/home/tllu/sorghum/seed_weight
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
###########单独做seed weight
#提取候选基因上游3.5kb和基因内部上的snp
cd /public/home/tllu/sorghum
awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/seed_weight
plink --bfile /public/home/tllu/sorghum/seed_weight/HC_genotype --extract range ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
#cd /public/home/tllu/haptype

#####seed weight
cd /public/home/tllu/sorghum/
mkdir seed_weight
cd /public/home/tllu/sorghum/seed_weight
awk '{print "seed_weight\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#提取候选基因上游3.5kb和基因内部上的snp
cd /public/home/tllu/sorghum/seed_weight
plink --bfile /public/home/tllu/sorghum/seed_weight/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
#excel生成seed_weight.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/seed_weight
module load Python/3.8.6
module load plink/1.9
python NL18r0.py

#####plant height
cd /public/home/tllu/sorghum
mkdir plant_height
####调取现有材料的基因型
cd /public/home/tllu/sorghum/plant_height
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/plant_height
plink --bfile /public/home/tllu/sorghum/plant_height/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/plant_height
awk '{print "plant_height\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成plant_height.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/plant_height
module load Python/3.8.6
module load plink/1.9
python NL18r0.py

#####用一个随机调取的基因来做单倍型分析，看看是不是也都是存在显著与某性状相关的SNP
#####plant height, use randomly selected genes
cd /public/home/tllu/sorghum
mkdir random
####调取现有材料的基因型
cd /public/home/tllu/sorghum/random
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep ../plant_height/keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' gene_random.txt >target.txt
cd /public/home/tllu/sorghum/random
plink --bfile /public/home/tllu/sorghum/random/HC_genotype --allow-extra-chr --extract range  target.txt --make-bed --out target_snp
plink --bfile target_snp --allow-extra-chr --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/random
awk '{print "random\t.\t.\t.\t.\t.\t"$9"\t."}' gene_random.txt >NL18r0.txt
#准备表型数据
cp ../plant_height/plant_height.txt random.txt
#excel生成 plant_height.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/random
module load Python/3.8.6
module load plink/1.9
python NL18r0.py


#####inflorescence_exsertion
cd /public/home/tllu/sorghum
mkdir inflorescence_exsertion
cd inflorescence_exsertion
cp ../plant_height/NL18r0.py .
####调取现有材料的基因型
cd /public/home/tllu/sorghum/inflorescence_exsertion
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/inflorescence_exsertion
plink --bfile /public/home/tllu/sorghum/inflorescence_exsertion/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/inflorescence_exsertion
awk '{print "inflorescence_exsertion\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成inflorescence_exsertion.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/inflorescence_exsertion
module load Python/3.8.6
module load plink/1.9
python NL18r0.py


#####panicle_erectness,不是1就是2，不适合做t-test
cd /public/home/tllu/sorghum
mkdir panicle_erectness
cd panicle_erectness
cp ../plant_height/NL18r0.py .
####调取现有材料的基因型
cd /public/home/tllu/sorghum/panicle_erectness
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/panicle_erectness
plink --bfile /public/home/tllu/sorghum/panicle_erectness/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/panicle_erectness
awk '{print "panicle_erectness\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成panicle_erectness.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/panicle_erectness
module load Python/3.8.6
module load plink/1.9
python NL18r0.py



#####nodal_tiller，不是1就是2，不做
cd /public/home/tllu/sorghum
mkdir nodal_tiller
cd nodal_tiller
cp ../plant_height/NL18r0.py .
####调取现有材料的基因型
cd /public/home/tllu/sorghum/nodal_tiller
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/nodal_tiller
plink --bfile /public/home/tllu/sorghum/nodal_tiller/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/nodal_tiller
awk '{print "nodal_tiller\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成nodal_tiller.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/nodal_tiller
module load Python/3.8.6
module load plink/1.9
python NL18r0.py


#####panicle_length
cd /public/home/tllu/sorghum
mkdir panicle_length
cd panicle_length
cp ../plant_height/NL18r0.py .
####调取现有材料的基因型
cd /public/home/tllu/sorghum/panicle_length
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/panicle_length
plink --bfile /public/home/tllu/sorghum/panicle_length/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/panicle_length
awk '{print "panicle_length\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成panicle_length.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/panicle_length
module load Python/3.8.6
module load plink/1.9
python NL18r0.py


#####plant_color
cd /public/home/tllu/sorghum
mkdir plant_color
cd plant_color
cp ../plant_height/NL18r0.py .
####调取现有材料的基因型
cd /public/home/tllu/sorghum/plant_color
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/plant_color
plink --bfile /public/home/tllu/sorghum/plant_color/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/plant_color
awk '{print "plant_color\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成plant_color.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/plant_color
module load Python/3.8.6
module load plink/1.9
python NL18r0.py


#####short_day_anthesis
cd /public/home/tllu/sorghum
mkdir short_day_anthesis
cd short_day_anthesis
cp ../plant_height/NL18r0.py .
####调取现有材料的基因型
cd /public/home/tllu/sorghum/short_day_anthesis
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/short_day_anthesis
plink --bfile /public/home/tllu/sorghum/short_day_anthesis/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/short_day_anthesis
awk '{print "short_day_anthesis\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成short_day_anthesis.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/short_day_anthesis
module load Python/3.8.6
module load plink/1.9
python NL18r0.py


#####stalk_waxiness
cd /public/home/tllu/sorghum
mkdir stalk_waxiness
cd stalk_waxiness
cp ../plant_height/NL18r0.py .
####调取现有材料的基因型
cd /public/home/tllu/sorghum/stalk_waxiness
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/stalk_waxiness
plink --bfile /public/home/tllu/sorghum/stalk_waxiness/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/stalk_waxiness
awk '{print "stalk_waxiness\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成stalk_waxiness.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/stalk_waxiness
module load Python/3.8.6
module load plink/1.9
python NL18r0.py

#####stalk_juiciness
cd /public/home/tllu/sorghum
mkdir stalk_juiciness
cd stalk_juiciness
cp ../plant_height/NL18r0.py .
####调取现有材料的基因型
cd /public/home/tllu/sorghum/stalk_juiciness
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/stalk_juiciness
plink --bfile /public/home/tllu/sorghum/stalk_juiciness/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/stalk_juiciness
awk '{print "stalk_juiciness\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成stalk_juiciness.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/stalk_juiciness
module load Python/3.8.6
module load plink/1.9
python NL18r0.py


#####sprouting_tendency，不是1就是2，不做
cd /public/home/tllu/sorghum
mkdir sprouting_tendency
cd sprouting_tendency
cp ../plant_height/NL18r0.py .
####调取现有材料的基因型
cd /public/home/tllu/sorghum/sprouting_tendency
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/sprouting_tendency
plink --bfile /public/home/tllu/sorghum/sprouting_tendency/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/sprouting_tendency
awk '{print "sprouting_tendency\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成sprouting_tendency.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/sprouting_tendency
module load Python/3.8.6
module load plink/1.9
python NL18r0.py


#####vigor
cd /public/home/tllu/sorghum
mkdir vigor
cd vigor
cp ../plant_height/NL18r0.py .
####调取现有材料的基因型
cd /public/home/tllu/sorghum/vigor
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/vigor
plink --bfile /public/home/tllu/sorghum/vigor/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/vigor
awk '{print "vigor\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成vigor.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/vigor
module load Python/3.8.6
module load plink/1.9
python NL18r0.py


#####sprouting tendency，不是1就是2，不做
cd /public/home/tllu/sorghum
mkdir sprouting tendency
cd sprouting tendency
cp ../plant_height/NL18r0.py .
####调取现有材料的基因型
cd /public/home/tllu/sorghum/sprouting tendency
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/sprouting tendency
plink --bfile /public/home/tllu/sorghum/sprouting tendency/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/sprouting tendency
awk '{print "sprouting tendency\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成sprouting tendency.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/sprouting tendency
module load Python/3.8.6
module load plink/1.9
python NL18r0.py


#####yield_potential
cd /public/home/tllu/sorghum
mkdir yield_potential
cd yield_potential
cp ../plant_height/NL18r0.py .
####调取现有材料的基因型
cd /public/home/tllu/sorghum/yield_potential
plink --bfile /public/home/tllu/sorghum/output.snp.filtered --keep keep.txt --allow-extra-chr --make-bed --out HC_genotype
#提取候选基因上游3.5kb和基因内部上的snp
#cd /public/home/tllu/sorghum
#awk '{if($7 == "+") print $1"\t"$4-2000"\t"$5"\t"$9; else if($7 == "-") print $1"\t"$4"\t"$5+2000"\t"$9}' geneR1.txt >target.txt
cd /public/home/tllu/sorghum/yield_potential
plink --bfile /public/home/tllu/sorghum/yield_potential/HC_genotype --allow-extra-chr --extract range  ../target.txt --make-bed --out target_snp
plink --bfile target_snp --recode vcf-iid --out target_snp_vcf
##做ttest
#计算p-value
#提前准备好基因型文件，gene.txt 表型文件 和  NL18r2.txt
#准备NL18r2.txt
cd /public/home/tllu/sorghum/yield_potential
awk '{print "yield_potential\t.\t.\t.\t.\t.\t"$9"\t."}' ../geneR1.txt >NL18r0.txt
#准备表型数据
#excel生成yield_potential.txt
#运行程序
#cd /public/home/tllu/haptype
cd /public/home/tllu/sorghum/yield_potential
module load Python/3.8.6
module load plink/1.9
python NL18r0.py

#######合并以上所有单倍型分析结果
cd /public/home/tllu/sorghum
cat */NL18_result.txt >total_result.txt




















 