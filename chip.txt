#####ChIP-seq data analysis
dir=/public/home/chaohe/sorghum/chip
cd /public/home/chaohe/sorghum/chip/fq
#make meta files
cut -f 3 ../meta/chip.list | sort | uniq > ../meta/narrow.SRX.list
awk -vOFS="\t" '{a[$2]=$3;if(!($2~/_control/)){b[$2]=$1;}} \
END{for(i in b){print b[i],i,a[i],a[i"_control"]}}' \
../meta/narrow.list | sort -k 1 -k 2 \
> ../meta/macs2.meta
#trim
cd ../fq
cut -f 3 ../meta/macs2.meta | while read i; do
java -jar $EBROOTTRIMMOMATIC/trimmomatic-0.32.jar PE -threads 32 -phred33 "$i"_R1.fq.gz "$i"_R2.fq.gz "$i"_R1_paired.fq.gz "$i"_R1_unpaired.fq.gz "$i"_R2_paired.fq.gz "$i"_R2_unpaired.fq.gz  ILLUMINACLIP:/public/home/software/opt/bio/software/Trimmomatic/0.32-Java-1.8.0_92/adapters/TruSeq3-PE.fa:2:30:10 LEADING:20 TRAILING:20 SLIDINGWINDOW:4:15 MINLEN:36
done
#align
mkdir ../align
cd ../align
cut -f 3 ../meta/macs2.meta | while read i; do
bowtie2 --no-unal --threads 16 --sensitive -k 3 -q --phred33 --rg-id '"$i"_R1_"$i"_R2' --rg 'SM:"$i"_R1_"$i"_R2\tPL:Illumina\tLB:Illumina_1_8' -x /public/home/chaohe/db/Sorghum_bicolor.Sorghum_bicolor_NCBIv3.dna.toplevel -1 ../fq/"$i"_R1_paired.fq.gz -2 ../fq/"$i"_R2_paired.fq.gz 2> "$i"_R1_"$i"_R2.log | samtools sort -@ 4 -m 8g -o "$i".sort.bam
done
#filter
cut -f 3 ../meta/macs2.meta | while read i; do
samtools index "$i".sort.bam
samtools flagstat "$i".sort.bam >"$i".sort.flagstat.qc
#samtools unalign & MAPQ<5 reads
samtools view -F 1804 -q 5 -b "$i".sort.bam >"$i".filter.bam
samtools index -c "$i".filter.bam
picard MarkDuplicates \
      I="$i".filter.bam \
      O="$i".dupmark.bam \
   REMOVE_DUPLICATES=true \
      M=marked_dup_metrics.txt   
samtools view -@ 8 -F 1804 -b "$i".dupmark.bam > "$i".final.bam
samtools index -c "$i".final.bam
done
#calculate extend size
cd /public/home/chaohe/sorghum/chip/align
cut -f 3 ../meta/narrow.macs2.meta | while read Trmt ; do
Rscript /public/home/chaohe/phantompeakqualtools-1.2/run_spp.R -c=$Trmt.final.bam -filtchr="chrUn" -savp -out=$Trmt.spp
done
#narrow peak calling
cat "$dir"/meta/narrow.macs2.meta | while read TF Rep Trmt Ctrl  spp; do
ChIP="$dir"/align/$Trmt.final.bam
Ctrl="$dir"/align/${Ctrl}.final.bam
OUT=${Rep}
[[ ! -f chrom.sizes ]] && samtools view -H $ChIP | \
awk -vOFS="\t"  '(/^@SQ/){match($0,/SN:(\w+)/,SN); match($0,/LN:([0-9]+)/,LN);print SN[1],LN[1]}'> chrom.sizes
GS=$(awk 'BEGIN{GS=0}{GS+=$2}END{print int(0.85*GS)}' chrom.sizes) 
[[ ! -f ${OUT}.peaks.bed ]] && \
macs2 callpeak -f BAM -t $ChIP -c $Ctrl -n ${OUT} -g $GS -p 1e-5 --mfold 2 20 --nomodel  --shift 0 --extsize $spp  --to-large; 
maxS=$(sort -k 5gr,5gr ${OUT}_peaks.narrowPeak | head -n 1 | cut -f 5); 
minS=$(sort -k 5gr,5gr ${OUT}_peaks.narrowPeak | tail -n 1 | cut -f 5); 
awk -vOFS='\t' -vm=$minS -vM=$maxS '{$5=int((($5-m)*(1000-10)/(M-m))+10); print}' ${OUT}_peaks.narrowPeak > ${OUT}.peaks.bed; \
done
#broad peak calling
cat "$dir"/meta/broad.macs2.meta | while read TF Rep Trmt Ctrl  spp; do
ChIP="$dir"/align/$Trmt.final.bam
Ctrl="$dir"/align/${Ctrl}.final.bam
OUT=${Rep}
[[ ! -f chrom.sizes ]] && samtools view -H $ChIP | \
awk -vOFS="\t"  '(/^@SQ/){match($0,/SN:(\w+)/,SN); match($0,/LN:([0-9]+)/,LN);print SN[1],LN[1]}'> chrom.sizes
GS=$(awk 'BEGIN{GS=0}{GS+=$2}END{print int(0.85*GS)}' chrom.sizes) 
[[ ! -f ${OUT}.peaks.bed ]] && \
macs2 callpeak -f BAM -t $ChIP -c $Ctrl -n ${OUT} -g $GS -p 1e-5 --mfold 2 20 --nomodel  --shift 0 --extsize $spp --broad --to-large; 
maxS=$(sort -k 5gr,5gr ${OUT}_peaks.narrowPeak | head -n 1 | cut -f 5); 
minS=$(sort -k 5gr,5gr ${OUT}_peaks.narrowPeak | tail -n 1 | cut -f 5); 
awk -vOFS='\t' -vm=$minS -vM=$maxS '{$5=int((($5-m)*(1000-10)/(M-m))+10); print}' ${OUT}_peaks.broadPeak > ${OUT}.peaks.bed;
done
###extract read mapped on peaks or genes
cd /public/home/chaohe/sorghum/chip/align
cut -f 1 macs2.meta | while read i; do
bedtools  intersect  -a "$i"_rep0.bam -b ../macs2/"$i".peaks.bed > "$i"_reads.bam
samtools index -c "$i"_reads.bam
done
##read normalization
cut -f 1 macs2.meta | while read i; do
bamCoverage --bam "$i"_reads.bam -o "$i"_rpkm.bw --binSize 20 --normalizeUsing RPKM --smoothLength 50 --effectiveGenomeSize 708735318 --extendReads"
done
#draw metaplot
computeMatrix scale-regions -p 10 -S *_rpkm.bw -R /public/home/chaohe/sorghum/chip/align/Sorghum_geneR1.bed -b 1500 -a 1500 -m 1500 --skipZeros -o chip.mat.gz"
plotProfile --dpi 720 -m chip.mat.gz -out chip.profile.pdf --plotFileFormat pdf --perGroup
###draw correlation heatmap
multiBigwigSummary  bins --bwfiles *rpkm*bw --binSize 100 --numberOfProcessors 10 --outRawCounts chip.txt -o chip.npz -p 8
plotCorrelation -in chip.npz  \
--corMethod pearson --skipZeros \
--plotTitle "Pearson Correlation of Read Counts" \
--whatToPlot heatmap --colorMap RdYlBu --plotNumbers --removeOutliers \
--plotFileFormat pdf \
-o heatmap_PearsonCorr_readCounts.pdf   \
--outFileCorMatrix PearsonCorr_readCounts.tab
